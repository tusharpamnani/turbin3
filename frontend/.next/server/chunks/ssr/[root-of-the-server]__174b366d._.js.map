{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/app/components/DashboardPreview.tsx"],"sourcesContent":["\"use client\";\n\nimport { motion } from 'framer-motion';\n\ninterface DashboardPreviewProps {\n  onPreviewClick: () => void;\n}\n\nconst DashboardPreview = ({ onPreviewClick }: DashboardPreviewProps) => {\n  return (\n    <div className=\"relative pointer-events-none mt-5\">\n      {/* Preview container with overflow to show only top portion */}\n      <div className=\"h-[250px] overflow-hidden\">\n        <motion.div\n          layoutId=\"dashboard-main\" \n          className=\"bg-white/5 backdrop-blur-md rounded-xl border border-white/10 shadow-xl cursor-pointer transition-transform duration-300 group pointer-events-auto\"\n          onClick={onPreviewClick}\n          whileHover={{ scale: 1.02, boxShadow: \"0 25px 50px -12px rgba(0, 0, 0, 0.25)\" }}\n          style={{ \n            maxWidth: \"800px\", \n            margin: \"0 auto\",\n            padding: \"20px 24px\",\n            background: \"linear-gradient(to bottom right, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.05))\",\n          }}\n        >\n          <div className=\"flex justify-between items-center mb-4\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-8 h-8 bg-gradient-to-br from-indigo-500/80 to-purple-600/80 rounded-lg flex items-center justify-center border border-white/20 backdrop-blur-sm shadow-inner\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                </svg>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-emerald-400 font-medium\">Live</span>\n              <div className=\"w-2 h-2 rounded-full bg-emerald-400 animate-pulse shadow-lg shadow-emerald-500/20\"></div>\n            </div>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-4\">\n            <div className=\"bg-white/5 p-4 rounded-lg border border-white/10 backdrop-blur-sm shadow-inner\">\n              <h5 className=\"text-sm text-zinc-400 mb-2\">Balance</h5>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-2xl font-medium text-white\">62 SOL</span>\n                <span className=\"text-emerald-400 text-sm\">↑ Up</span>\n              </div>\n            </div>\n            <div className=\"bg-white/5 p-4 rounded-lg border border-white/10 backdrop-blur-sm shadow-inner\">\n              <h5 className=\"text-sm text-zinc-400 mb-2\">Predictions Made</h5>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-2xl font-medium text-white\">43%</span>\n                <span className=\"text-rose-400 text-sm\">↓ Down</span>\n              </div>\n            </div>\n            <div className=\"bg-white/5 p-4 rounded-lg border border-white/10 backdrop-blur-sm shadow-inner\">\n              <h5 className=\"text-sm text-zinc-400 mb-2\">Success Rate</h5>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-2xl font-medium text-white\">78%</span>\n                <span className=\"text-emerald-400 text-sm\">↑ Up</span>\n              </div>\n            </div>\n          </div>\n          \n          {/* Additional sections that will be partially hidden */}\n          <div className=\"mt-4 grid md:grid-cols-2 gap-4\">\n            <div className=\"bg-white/5 p-4 rounded-lg border border-white/10 backdrop-blur-sm shadow-inner\">\n              <h5 className=\"text-sm text-zinc-400 mb-2\">Market Activity</h5>\n              <div className=\"h-32 bg-white/5 rounded-lg border border-white/5\"></div>\n            </div>\n            <div className=\"bg-white/5 p-4 rounded-lg border border-white/10 backdrop-blur-sm shadow-inner\">\n              <h5 className=\"text-sm text-zinc-400 mb-2\">Recent Trades</h5>\n              <div className=\"h-32 bg-white/5 rounded-lg border border-white/5\"></div>\n            </div>\n          </div>\n          \n          {/* More content that will be even more hidden */}\n          <div className=\"mt-4 bg-white/5 p-4 rounded-lg border border-white/10 backdrop-blur-sm shadow-inner\">\n            <h5 className=\"text-sm text-zinc-400 mb-2\">Advanced Analytics</h5>\n            <div className=\"h-40 bg-white/5 rounded-lg border border-white/5\"></div>\n          </div>\n        </motion.div>\n      </div>\n      \n      {/* Glassmorphic fade effect at bottom - adjusted for taller preview */}\n      <div className=\"absolute bottom-0 left-0 right-0 h-24 bg-gradient-to-t from-black/90 to-transparent pointer-events-none\"></div>\n      \n      {/* Click hint that appears on hover */}\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ delay: 2, duration: 0.5 }}\n        className=\"absolute -bottom-8 left-0 right-0 text-center\"\n      >\n      </motion.div>\n    </div>\n  );\n};\n\nexport default DashboardPreview;"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAQA,MAAM,mBAAmB,CAAC,EAAE,cAAc,EAAyB;IACjE,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;oBACT,UAAS;oBACT,WAAU;oBACV,SAAS;oBACT,YAAY;wBAAE,OAAO;wBAAM,WAAW;oBAAwC;oBAC9E,OAAO;wBACL,UAAU;wBACV,QAAQ;wBACR,SAAS;wBACT,YAAY;oBACd;;sCAEA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;4CAAI,OAAM;4CAA6B,WAAU;4CAAqB,MAAK;4CAAO,SAAQ;4CAAY,QAAO;sDAC5G,cAAA,8OAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;;;;;;;;;;;8CAI3E,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;sDAA+B;;;;;;sDAC/C,8OAAC;4CAAI,WAAU;;;;;;;;;;;;;;;;;;sCAInB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAC3C,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAK,WAAU;8DAAkC;;;;;;8DAClD,8OAAC;oDAAK,WAAU;8DAA2B;;;;;;;;;;;;;;;;;;8CAG/C,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAC3C,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAK,WAAU;8DAAkC;;;;;;8DAClD,8OAAC;oDAAK,WAAU;8DAAwB;;;;;;;;;;;;;;;;;;8CAG5C,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAC3C,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAK,WAAU;8DAAkC;;;;;;8DAClD,8OAAC;oDAAK,WAAU;8DAA2B;;;;;;;;;;;;;;;;;;;;;;;;sCAMjD,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAC3C,8OAAC;4CAAI,WAAU;;;;;;;;;;;;8CAEjB,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAC3C,8OAAC;4CAAI,WAAU;;;;;;;;;;;;;;;;;;sCAKnB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAA6B;;;;;;8CAC3C,8OAAC;oCAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;0BAMrB,8OAAC;gBAAI,WAAU;;;;;;0BAGf,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;gBACT,SAAS;oBAAE,SAAS;gBAAE;gBACtB,SAAS;oBAAE,SAAS;gBAAE;gBACtB,YAAY;oBAAE,OAAO;oBAAG,UAAU;gBAAI;gBACtC,WAAU;;;;;;;;;;;;AAKlB;uCAEe","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/app/components/BTCChart.tsx"],"sourcesContent":["'use client'\nimport React, { useEffect, useState } from 'react';\nimport dynamic from 'next/dynamic';\nimport { Position } from '../services/positions';\n\nconst ReactApexChart = dynamic(\n  () => import('react-apexcharts'),\n  { ssr: false }\n);\n\ninterface CandlestickData {\n  x: Date;\n  y: [number, number, number, number];\n}\n\ninterface BTCChartProps {\n  bounds: { upper: number | null; lower: number | null };\n  price: number | null;\n  activePositions?: Position[] | null;\n  selectedPosition?: Position | null;\n}\n\nconst BTCChart: React.FC<BTCChartProps> = ({ bounds, price, activePositions, selectedPosition }) => {\n  const [priceData, setPriceData] = useState<CandlestickData[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const fetchHistoricalData = async () => {\n    try {\n      setLoading(true);\n      \n      const response = await fetch(\n        'https://min-api.cryptocompare.com/data/v2/histohour?fsym=BTC&tsym=USD&limit=48&aggregate=1'\n      );\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch historical data: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      if (!data || !data.Data || !data.Data.Data || !Array.isArray(data.Data.Data)) {\n        throw new Error('Invalid or empty historical data format');\n      }\n      \n      const historicalData = data.Data.Data.map((item: any) => ({\n        x: new Date(item.time * 1000), \n        y: [item.open, item.high, item.low, item.close]\n      }));\n      \n      setPriceData(historicalData);\n      \n    } catch (error) {\n      console.error('Error fetching historical data:', error);\n    \n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchHistoricalData();\n    \n    const intervalId = setInterval(fetchHistoricalData, 15 * 60 * 1000);\n    \n    return () => clearInterval(intervalId);\n  }, []);\n  \n  useEffect(() => {\n  }, [price, bounds, activePositions, selectedPosition]);\n\n  const displayBounds = selectedPosition\n    ? { upper: selectedPosition.upper_bound, lower: selectedPosition.lower_bound }\n    : { upper: bounds.upper, lower: bounds.lower };\n\n  const options: ApexCharts.ApexOptions = {\n    chart: {\n      type: 'candlestick',\n      height: 500,\n      background: '#131722',\n      animations: {\n        enabled: true,\n        speed: 800,\n        dynamicAnimation: {\n          enabled: true,\n          speed: 350\n        }\n      },\n      toolbar: {\n        show: true,\n        tools: {\n          download: true,\n          selection: true,\n          zoom: true,\n          zoomin: true,\n          zoomout: true,\n          pan: true,\n          reset: true\n        },\n        autoSelected: 'zoom'\n      }\n    },\n    theme: {\n      mode: 'dark'\n    },\n    grid: {\n      borderColor: '#43577b',\n      strokeDashArray: 3\n    },\n    tooltip: {\n      enabled: true,\n      intersect: false,\n      shared: true,\n      custom: ({ seriesIndex, dataPointIndex, w }) => {\n        const o = w.globals.seriesCandleO[seriesIndex][dataPointIndex];\n        const h = w.globals.seriesCandleH[seriesIndex][dataPointIndex];\n        const l = w.globals.seriesCandleL[seriesIndex][dataPointIndex];\n        const c = w.globals.seriesCandleC[seriesIndex][dataPointIndex];\n        \n        return `\n          <div class=\"apexcharts-tooltip-candlestick\" style=\"padding: 10px; background: #131722; color: white; border: 1px solid #43577b;\">\n            <div>Date: ${new Date(w.globals.seriesX[seriesIndex][dataPointIndex]).toLocaleString()}</div>\n            <div>Open: <span style=\"color: #bbb;\">$${o.toLocaleString()}</span></div>\n            <div>High: <span style=\"color: #bbb;\">$${h.toLocaleString()}</span></div>\n            <div>Low: <span style=\"color: #bbb;\">$${l.toLocaleString()}</span></div>\n            <div>Close: <span style=\"color: #bbb;\">$${c.toLocaleString()}</span></div>\n          </div>\n        `;\n      },\n      followCursor: true,\n      marker: {\n        show: false\n      },\n      x: {\n        show: true\n      }\n    },\n    plotOptions: {\n      candlestick: {\n        colors: {\n          upward: '#26A69A',  \n          downward: '#EF5350'\n        },\n        wick: {\n          useFillColor: true\n        }\n      },\n      bar: {\n        columnWidth: '70%'  \n      }\n    },\n    fill: {\n      opacity: 1,\n    },\n    stroke: {\n      width: 1  \n    },\n    title: {\n      text: selectedPosition ? `BTC/USD Price Chart (Position #${selectedPosition.id} Active)` : 'BTC/USD Price Chart',\n      align: 'left',\n      style: {\n        fontSize: '16px',\n        color: '#ffffff'\n      }\n    },\n    annotations: {\n      yaxis: [\n        ...(displayBounds.upper ? [\n          {\n            y: displayBounds.upper,\n            borderColor: '#26A69A', \n            borderWidth: 2,\n            strokeDashArray: 5,\n            label: {\n              text: `Upper: $${displayBounds.upper.toLocaleString()}`,\n              position: 'right',\n              style: {\n                background: '#131722',\n                color: '#26A69A', \n                fontSize: '12px',\n                fontWeight: 'bold',\n                padding: {\n                  left: 10,\n                  right: 10,\n                  top: 5,\n                  bottom: 5\n                }\n              }\n            }\n          }\n        ] : []),\n        ...(displayBounds.lower ? [\n          {\n            y: displayBounds.lower,\n            borderColor: '#EF5350',  \n            borderWidth: 2,\n            strokeDashArray: 5,\n            label: {\n              text: `Lower: $${displayBounds.lower.toLocaleString()}`,\n              position: 'right',\n              style: {\n                background: '#131722',\n                color: '#EF5350', \n                fontSize: '12px',\n                fontWeight: 'bold',\n                padding: {\n                  left: 10,\n                  right: 10,\n                  top: 5,\n                  bottom: 5\n                }\n              }\n            }\n          }\n        ] : []),\n        ...(price ? [\n          {\n            y: price,\n            borderColor: '#FFFFFF',  \n            borderWidth: 2,\n            strokeDashArray: 5,\n            label: {\n              position: 'right',\n              style: {\n                background: '#FFFFFF',  \n                color: '#131722',  \n                fontSize: '12px',\n                fontWeight: 'bold',\n                padding: {\n                  left: 10,\n                  right: 10,\n                  top: 5,\n                  bottom: 5\n                }\n              }\n            }\n          }\n        ] : [])\n      ]\n    },\n    xaxis: {\n      type: 'datetime',\n      axisBorder: {\n        color: '#43577b'\n      },\n      axisTicks: {\n        color: '#43577b'\n      },\n      labels: {\n        style: {\n          colors: '#ffffff'\n        }\n      }\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true\n      },\n      labels: {\n        style: {\n          colors: '#ffffff'\n        },\n        formatter: (value) => {\n          return `$${value.toLocaleString()}`\n        }\n      },\n      ...(displayBounds.upper && displayBounds.lower ? {\n        min: Math.floor(displayBounds.lower * 0.99),\n        max: Math.ceil(displayBounds.upper * 1.01)\n      } : {}),\n    },\n  };\n\n  if (displayBounds.upper && displayBounds.lower) {\n    let fillColor = '#4285F4';\n    \n    if (selectedPosition) {\n      fillColor = selectedPosition.position_type === 0 \n        ? 'rgba(38, 166, 154, 0.15)' \n        : 'rgba(239, 83, 80, 0.15)'; \n    }\n    \n    options.fill = {\n      type: 'gradient',\n      gradient: {\n        shade: 'dark',\n        type: 'vertical',\n        shadeIntensity: 0.5,\n        opacityFrom: 0.4,\n        opacityTo: 0.2,\n        stops: [0, 100],\n        colorStops: [\n          {\n            offset: 0,\n            color: fillColor,\n            opacity: 0.4\n          },\n          {\n            offset: 100,\n            color: fillColor,\n            opacity: 0.2\n          }\n        ]\n      }\n    };\n  }\n\n  const series = [{\n    name: 'BTC/USD',\n    data: priceData\n  }];\n\n  return (\n    <div className=\"chart-container\" style={{ backgroundColor: '#131722', padding: '20px', borderRadius: '8px' }}>\n      \n      {loading ? (\n        <div style={{ height: '500px', display: 'flex', alignItems: 'center', justifyContent: 'center', color: 'white' }}>\n          Loading chart data...\n        </div>\n      ) : (\n        <ReactApexChart \n          options={options} \n          series={series} \n          type=\"candlestick\" \n          height={500} \n        />\n      )}\n      \n      {price && (\n        <div style={{ \n          marginTop: '15px', \n          display: 'flex', \n          justifyContent: 'space-between', \n          color: 'white', \n          fontSize: '14px',\n          padding: '10px',\n          backgroundColor: 'rgba(0,0,0,0.2)',\n          borderRadius: '4px'\n        }}>\n          <div>\n            <strong>Current BTC Price:</strong> ${price.toLocaleString()}\n          </div>\n          <div>\n            <em>Last updated: {new Date().toLocaleTimeString()}</em>\n          </div>\n        </div>\n      )}\n      \n      {selectedPosition && (\n        <div className=\"mt-4 p-3 bg-blue-500/20 border border-blue-500/30 rounded-md text-center\">\n          <p className=\"text-sm text-blue-300\">\n            <span className=\"font-medium\">Position #{selectedPosition.id} Active:</span> Bounds are frozen at lower: ${selectedPosition.lower_bound.toLocaleString()} and upper: ${selectedPosition.upper_bound.toLocaleString()}\n          </p>\n          <p className=\"text-xs text-blue-400 mt-1\">\n            {selectedPosition.position_type === 0 \n              ? 'SHORT/stay-in position - profit if price remains between bounds' \n              : 'LONG/break-out position - profit if price breaks outside bounds'}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BTCChart;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 808, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/app/components/VolatilitySlider.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\n\ninterface VolatilitySliderProps {\n  percent: number;\n  setPercent: (value: number) => void;\n  disabled?: boolean;\n}\n\nconst VolatilitySlider: React.FC<VolatilitySliderProps> = ({ percent, setPercent, disabled = false }) => {\n  const [inputValue, setInputValue] = useState<string>(percent.toFixed(1));\n  \n  // Values for the slider - range from 0.1% to 10.0% with 0.1% increments\n  const values = [\n    0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0,\n    1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0,\n    2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3.0,\n    3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4.0,\n    4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5.0,\n    5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 6.0,\n    6.1, 6.2, 6.3, 6.4, 6.5, 6.6, 6.7, 6.8, 6.9, 7.0,\n    7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8.0,\n    8.1, 8.2, 8.3, 8.4, 8.5, 8.6, 8.7, 8.8, 8.9, 9.0,\n    9.1, 9.2, 9.3, 9.4, 9.5, 9.6, 9.7, 9.8, 9.9, 10.0\n  ];\n  \n  // Find the closest allowed value to current percent\n  const closestValueIndex = values.reduce((prevIndex, value, currentIndex) => {\n    return Math.abs(value - percent) < Math.abs(values[prevIndex] - percent)\n      ? currentIndex\n      : prevIndex;\n  }, 0);\n\n  // Update input value when percent changes from parent\n  useEffect(() => {\n    setInputValue(percent.toFixed(1));\n  }, [percent]);\n\n  const handleSliderChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const index = parseInt(e.target.value);\n    setPercent(values[index]);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setInputValue(value);\n  };\n\n  const handleInputBlur = () => {\n    let newValue = parseFloat(inputValue);\n    \n    // Validate input\n    if (isNaN(newValue)) {\n      newValue = percent;\n    } else {\n      // Clamp value between min and max\n      newValue = Math.max(0.1, Math.min(10.0, newValue));\n      \n      // Find closest allowed value\n      const closestValue = values.reduce((prev, curr) => \n        Math.abs(curr - newValue) < Math.abs(prev - newValue) ? curr : prev\n      );\n      \n      newValue = closestValue;\n    }\n    \n    setInputValue(newValue.toFixed(1));\n    setPercent(newValue);\n  };\n\n  return (\n    <div>\n      <div className=\"flex justify-between items-center\">\n        <label className=\"block text-sm text-zinc-400 mb-1\">Volatility Range</label>\n        <div className=\"flex items-center\">\n          <input\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange}\n            onBlur={handleInputBlur}\n            disabled={disabled}\n            className={`w-16 h-7 bg-zinc-700 text-purple-400 text-sm text-center rounded-md border border-zinc-600 focus:outline-none focus:border-purple-500 ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}\n          />\n          <span className=\"text-sm font-medium text-purple-400 ml-1\">%</span>\n        </div>\n      </div>\n      \n      <input\n        type=\"range\"\n        min=\"0\"\n        max={values.length - 1}\n        value={closestValueIndex}\n        step=\"1\"\n        onChange={handleSliderChange}\n        disabled={disabled}\n        className={`w-full h-2 bg-gradient-to-r from-[#00FF99] to-[#FF4C4C] rounded-lg appearance-none cursor-pointer ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}\n      />\n      \n      <div className=\"flex justify-between mt-1\">\n        <span className=\"text-xs text-[#00FF99]\">0.1%</span>\n        <span className=\"text-xs text-[#FF4C4C]\">10.0%</span>\n      </div>\n    </div>\n  );\n};\n\nexport default VolatilitySlider;\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAUA,MAAM,mBAAoD,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,KAAK,EAAE;IAClG,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,QAAQ,OAAO,CAAC;IAErE,wEAAwE;IACxE,MAAM,SAAS;QACboDAAoD;IACpD,MAAM,oBAAoB,OAAO,MAAM,CAAC,CAAC,WAAW,OAAO;QACzD,OAAO,KAAK,GAAG,CAAC,QAAQ,WAAW,KAAK,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,WAC5D,eACA;IACN,GAAG;IAEH,sDAAsD;IACtD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,cAAc,QAAQ,OAAO,CAAC;IAChC,GAAG;QAAC;KAAQ;IAEZ,MAAM,qBAAqB,CAAC;QAC1B,MAAM,QAAQ,SAAS,EAAE,MAAM,CAAC,KAAK;QACrC,WAAW,MAAM,CAAC,MAAM;IAC1B;IAEA,MAAM,oBAAoB,CAAC;QACzB,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;QAC5B,cAAc;IAChB;IAEA,MAAM,kBAAkB;QACtB,IAAI,WAAW,WAAW;QAE1B,iBAAiB;QACjB,IAAI,MAAM,WAAW;YACnB,WAAW;QACb,OAAO;YACL,kCAAkC;YAClC,WAAW,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,MAAM;YAExC,6BAA6B;YAC7B,MAAM,eAAe,OAAO,MAAM,CAAC,CAAC,MAAM,OACxC,KAAK,GAAG,CAAC,OAAO,YAAY,KAAK,GAAG,CAAC,OAAO,YAAY,OAAO;YAGjE,WAAW;QACb;QAEA,cAAc,SAAS,OAAO,CAAC;QAC/B,WAAW;IACb;IAEA,qBACE,8OAAC;;0BACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,WAAU;kCAAmC;;;;;;kCACpD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU;gCACV,QAAQ;gCACR,UAAU;gCACV,WAAW,CAAC,sIAAsI,EAAE,WAAW,kCAAkC,IAAI;;;;;;0CAEvM,8OAAC;gCAAK,WAAU;0CAA2C;;;;;;;;;;;;;;;;;;0BAI/D,8OAAC;gBACC,MAAK;gBACL,KAAI;gBACJ,KAAK,OAAO,MAAM,GAAG;gBACrB,OAAO;gBACP,MAAK;gBACL,UAAU;gBACV,UAAU;gBACV,WAAW,CAAC,kGAAkG,EAAE,WAAW,kCAAkC,IAAI;;;;;;0BAGnK,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAU;kCAAyB;;;;;;kCACzC,8OAAC;wBAAK,WAAU;kCAAyB;;;;;;;;;;;;;;;;;;AAIjD;uCAEe","debugId":null}},
    {"offset": {"line": 1055, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/app/components/PayoutVisualization.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\n\ninterface PayoutVisualizationProps {\n  orderSide: 'LONG' | 'SHORT'; \n  amount: string; \n  className?: string;\n}\n\nconst PayoutVisualization: React.FC<PayoutVisualizationProps> = ({ \n  orderSide, \n  amount,\n  className = \"\"\n}) => {\n  const isBreakOut = orderSide === 'LONG';\n  const amountValue = parseFloat(amount);\n  const validAmount = !isNaN(amountValue) && amountValue > 0;\n  \n  const timePoints = [0, 6, 12, 18, 24];\n  \n\n  const breakOutPayouts = [200, 150, 100, 50, 0];\n  const stayInPayouts = [0, 50, 100, 150, 200];\n  \n  const payouts = isBreakOut ? breakOutPayouts : stayInPayouts;\n\n  return (\n    <div className={`bg-zinc-900 rounded-xl border border-zinc-800 p-4 ${className}`}>\n      <h3 className=\"text-base font-medium text-white mb-4 border-b border-zinc-800 pb-2\">\n        {isBreakOut ? 'BreakOut Payout' : 'StayIn Payout'} :\n      </h3>\n      \n      <div className=\"relative h-[120px] text-sm\">\n        {/* Main horizontal line (time axis) */}\n        <div className=\"absolute left-2 right-8 top-8 h-0.5 bg-zinc-500\">\n          {/* Arrow at end */}\n          <div className=\"absolute right-0 top-0 w-3 h-3 -mr-1 -mt-1.5 border-t border-r border-zinc-400 transform rotate-45\"></div>\n        </div>\n        \n        {/* Time markers with percentages or SOL amounts */}\n        {timePoints.map((hours, index) => {\n          // Calculate position (0 = left edge, 1 = right edge)\n          const position = index / (timePoints.length - 1);\n          const left = `calc(${position * 100}% * 0.9)`; // 0.9 factor to account for right margin space for arrow\n          \n          // Calculate payout amount if user entered a value\n          const payoutPercentage = payouts[index] / 100;\n          const payoutAmount = validAmount ? (amountValue * payoutPercentage).toFixed(2) : null;\n          \n          return (\n            <div \n              key={hours} \n              className=\"absolute\"\n              style={{ left, top: '24px' }}\n            >\n              {/* Vertical tick mark */}\n              <div className=\"h-6 w-0.5 bg-zinc-500 mx-auto\"></div>\n              \n              {/* Hour label */}\n              <div className=\"text-xs text-zinc-400 mt-1 text-center\">{hours}hrs</div>\n              \n              {/* Percentage or SOL amount */}\n              <div className=\"text-sm mt-5 text-center\">\n                {validAmount ? (\n                  <span className=\"text-purple-400 font-medium\">◎ {payoutAmount}</span>\n                ) : (\n                  <span className=\"text-white font-mono\">{payouts[index]}%</span>\n                )}\n              </div>\n            </div>\n          );\n        })}\n        \n        {/* Gradient overlay for blackboard effect */}\n        <div className=\"absolute inset-0 opacity-10 pointer-events-none bg-gradient-to-br from-zinc-300 to-transparent\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default PayoutVisualization; "],"names":[],"mappings":";;;;AAAA;;AAUA,MAAM,sBAA0D,CAAC,EAC/D,SAAS,EACT,MAAM,EACN,YAAY,EAAE,EACf;IACC,MAAM,aAAa,cAAc;IACjC,MAAM,cAAc,WAAW;IAC/B,MAAM,cAAc,CAAC,MAAM,gBAAgB,cAAc;IAEzD,MAAM,aAAa;QAAC;QAAG;QAAG;QAAI;QAAI;KAAG;IAGrC,MAAM,kBAAkB;QAAC;QAAK;QAAK;QAAK;QAAI;KAAE;IAC9C,MAAM,gBAAgB;QAAC;QAAG;QAAI;QAAK;QAAK;KAAI;IAE5C,MAAM,UAAU,aAAa,kBAAkB;IAE/C,qBACE,8OAAC;QAAI,WAAW,CAAC,kDAAkD,EAAE,WAAW;;0BAC9E,8OAAC;gBAAG,WAAU;;oBACX,aAAa,oBAAoB;oBAAgB;;;;;;;0BAGpD,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;kCAEb,cAAA,8OAAC;4BAAI,WAAU;;;;;;;;;;;oBAIhB,WAAW,GAAG,CAAC,CAAC,OAAO;wBACtB,qDAAqD;wBACrD,MAAM,WAAW,QAAQ,CAAC,WAAW,MAAM,GAAG,CAAC;wBAC/C,MAAM,OAAO,CAAC,KAAK,EAAE,WAAW,IAAI,QAAQ,CAAC,EAAE,yDAAyD;wBAExG,kDAAkD;wBAClD,MAAM,mBAAmB,OAAO,CAAC,MAAM,GAAG;wBAC1C,MAAM,eAAe,cAAc,CAAC,cAAc,gBAAgB,EAAE,OAAO,CAAC,KAAK;wBAEjF,qBACE,8OAAC;4BAEC,WAAU;4BACV,OAAO;gCAAE;gCAAM,KAAK;4BAAO;;8CAG3B,8OAAC;oCAAI,WAAU;;;;;;8CAGf,8OAAC;oCAAI,WAAU;;wCAA0C;wCAAM;;;;;;;8CAG/D,8OAAC;oCAAI,WAAU;8CACZ,4BACC,8OAAC;wCAAK,WAAU;;4CAA8B;4CAAG;;;;;;6DAEjD,8OAAC;wCAAK,WAAU;;4CAAwB,OAAO,CAAC,MAAM;4CAAC;;;;;;;;;;;;;2BAftD;;;;;oBAoBX;kCAGA,8OAAC;wBAAI,WAAU;;;;;;;;;;;;;;;;;;AAIvB;uCAEe","debugId":null}},
    {"offset": {"line": 1212, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/app/components/PlaceOrderPanel.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from 'react';\nimport VolatilitySlider from './VolatilitySlider';\nimport PayoutVisualization from './PayoutVisualization';\n\ntype OrderSide = 'LONG' | 'SHORT';\n\ntype PlaceOrderPanelProps = {\n  percent: number;\n  setPercent: (value: number) => void;\n  onPlaceOrder: (order: { side: OrderSide; amount: number; percent: number }) => Promise<void>;\n  isLoading: boolean;\n};\n\nconst PlaceOrderPanel: React.FC<PlaceOrderPanelProps> = ({ \n  percent, \n  setPercent, \n  onPlaceOrder,\n  isLoading\n}) => {\n  const [side, setSide] = useState<OrderSide>('LONG');\n  const [amount, setAmount] = useState<string>('');\n\n  const handlePlaceOrder = async () => {\n    const numAmount = parseFloat(amount);\n    if (isNaN(numAmount) || numAmount <= 0) return alert(\"Enter a valid amount\");\n    await onPlaceOrder({ side, amount: numAmount, percent });\n  };\n\n  return (\n    <div className=\"bg-zinc-900/50 backdrop-blur-md p-6 rounded-xl border border-zinc-700/50 flex flex-col gap-5\">\n      {/* Order Side Selection */}\n      <div>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => setSide('LONG')}\n            disabled={isLoading}\n            className={`flex-1 p-2 rounded text-center transition-colors ${\n              side === 'LONG' \n                ? 'bg-red-500/20 text-red-400 border border-red-500/50'\n                : 'bg-zinc-800 border border-zinc-700 hover:bg-zinc-700'\n            } ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\n          >\n            BREAK OUT\n          </button>\n          <button\n            onClick={() => setSide('SHORT')}\n            disabled={isLoading}\n            className={`flex-1 p-2 rounded text-center transition-colors ${\n              side === 'SHORT'\n                ? 'bg-green-500/20 text-green-400 border border-green-500/50'\n                : 'bg-zinc-800 border border-zinc-700 hover:bg-zinc-700'\n            } ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\n          >\n            STAY IN\n          </button>\n        </div>\n      </div>\n\n      {/* Payout Visualization */}\n      <PayoutVisualization orderSide={side} amount={amount} className=\"my-1\" />\n\n      {/* Amount Input */}\n      <div>\n        <label className=\"block mb-1 text-sm text-zinc-400\">Amount</label>\n        <div className=\"relative\">\n          <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n            <span className=\"text-purple-400 font-bold\">◎</span>\n          </div>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            placeholder=\"Enter SOL to place order\"\n            disabled={isLoading}\n            className={`w-full p-2 pl-8 rounded bg-zinc-800 text-white border border-zinc-700 ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\n          />\n          <div className=\"absolute inset-y-0 right-0 flex items-center pr-3 text-zinc-500 text-xs\">\n            Devnet\n          </div>\n        </div>\n      </div>\n\n      {/* Volatility Slider */}\n      <VolatilitySlider percent={percent} setPercent={setPercent} disabled={isLoading} />\n\n      {/* Place Order Button */}\n      <button\n        onClick={handlePlaceOrder}\n        disabled={isLoading}\n        className={`w-full mt-1 px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white font-semibold rounded transition-all flex items-center justify-center ${isLoading ? 'opacity-75 cursor-not-allowed' : ''}`}\n      >\n        {isLoading ? (\n          <>\n            <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\n            Processing...\n          </>\n        ) : (\n          <>\n            <span className=\"text-white mr-2\">◎</span> \n            Place Order\n          </>\n        )}\n      </button>\n    </div>\n  );\n};\n\nexport default PlaceOrderPanel;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAeA,MAAM,kBAAkD,CAAC,EACvD,OAAO,EACP,UAAU,EACV,YAAY,EACZ,SAAS,EACV;IACC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa;IAC5C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAE7C,MAAM,mBAAmB;QACvB,MAAM,YAAY,WAAW;QAC7B,IAAI,MAAM,cAAc,aAAa,GAAG,OAAO,MAAM;QACrD,MAAM,aAAa;YAAE;YAAM,QAAQ;YAAW;QAAQ;IACxD;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;0BACC,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,SAAS,IAAM,QAAQ;4BACvB,UAAU;4BACV,WAAW,CAAC,iDAAiD,EAC3D,SAAS,SACL,wDACA,uDACL,CAAC,EAAE,YAAY,kCAAkC,IAAI;sCACvD;;;;;;sCAGD,8OAAC;4BACC,SAAS,IAAM,QAAQ;4BACvB,UAAU;4BACV,WAAW,CAAC,iDAAiD,EAC3D,SAAS,UACL,8DACA,uDACL,CAAC,EAAE,YAAY,kCAAkC,IAAI;sCACvD;;;;;;;;;;;;;;;;;0BAOL,8OAAC,yIAAA,CAAA,UAAmB;gBAAC,WAAW;gBAAM,QAAQ;gBAAQ,WAAU;;;;;;0BAGhE,8OAAC;;kCACC,8OAAC;wBAAM,WAAU;kCAAmC;;;;;;kCACpD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAK,WAAU;8CAA4B;;;;;;;;;;;0CAE9C,8OAAC;gCACC,MAAK;gCACL,KAAI;gCACJ,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;gCACzC,aAAY;gCACZ,UAAU;gCACV,WAAW,CAAC,sEAAsE,EAAE,YAAY,kCAAkC,IAAI;;;;;;0CAExI,8OAAC;gCAAI,WAAU;0CAA0E;;;;;;;;;;;;;;;;;;0BAO7F,8OAAC,sIAAA,CAAA,UAAgB;gBAAC,SAAS;gBAAS,YAAY;gBAAY,UAAU;;;;;;0BAGtE,8OAAC;gBACC,SAAS;gBACT,UAAU;gBACV,WAAW,CAAC,yIAAyI,EAAE,YAAY,kCAAkC,IAAI;0BAExM,0BACC;;sCACE,8OAAC;4BAAI,WAAU;;;;;;wBAA0F;;iDAI3G;;sCACE,8OAAC;4BAAK,WAAU;sCAAkB;;;;;;wBAAQ;;;;;;;;;;;;;;AAOtD;uCAEe","debugId":null}},
    {"offset": {"line": 1401, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/app/constants/constants.ts"],"sourcesContent":["import { AnchorProvider, Idl } from \"@project-serum/anchor\";\nimport { Program } from \"@project-serum/anchor\";\nimport idl from \"../idl/vault.json\"\nimport { Connection, ConnectionConfig, PublicKey , clusterApiUrl } from \"@solana/web3.js\"\n\nexport const endpoint = process.env.NEXT_PUBLIC_SOLANA_RPC_URL || clusterApiUrl(\"devnet\");\n\nexport const connection = new Connection(\n    process.env.NEXT_PUBLIC_SOLANA_RPC_URL || clusterApiUrl('devnet'),\n    {\n      commitment: 'confirmed',\n      maxSupportedTransactionVersion: 0,\n    } as ConnectionConfig\n  );\n\n\n"],"names":[],"mappings":";;;;AAGA;;AAEO,MAAM,WAAW,qEAA0C,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAE;AAEzE,MAAM,aAAa,IAAI,6JAAA,CAAA,aAAU,CACpC,qEAA0C,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAE,WACxD;IACE,YAAY;IACZ,gCAAgC;AAClC","debugId":null}},
    {"offset": {"line": 1431, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/app/services/vault.ts"],"sourcesContent":["\"use client\"\n\nimport { SystemProgram, LAMPORTS_PER_SOL, PublicKey, VersionedTransaction, TransactionInstruction, Transaction } from \"@solana/web3.js\";\nimport { connection } from \"../constants/constants\";\nimport { Program, AnchorProvider, Idl } from '@coral-xyz/anchor';\nimport BN from \"bn.js\";\nimport idl from \"../idl/vault.json\"\n\nconst sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport async function transferFundsToVault(wallet: any, amount: number, orderId: number = 1) {\n    let retries = 3;\n    \n    while (retries > 0) {\n      try {\n        const provider = new AnchorProvider(connection, wallet, {\n          commitment: 'confirmed',\n          preflightCommitment: 'processed',\n        });\n        \n        // Always pass the program ID as the second argument!\n        const program = new Program(\n          idl as Idl,\n          // \"9bqQoWC9ovH3FFGzEAV2MJJkF1uNuS4EVGZ2SmRw17w8\",\n          provider\n        );\n    \n        const userPubkey = provider.wallet.publicKey;\n    \n        const lamports = new BN(amount * LAMPORTS_PER_SOL);\n    \n        const [vaultStatePDA] = await PublicKey.findProgramAddressSync(\n          [Buffer.from(\"vault_state\"), userPubkey.toBuffer()],\n          program.programId\n        );\n    \n        const [vaultPDA] = await PublicKey.findProgramAddressSync(\n          [Buffer.from(\"vault\"), vaultStatePDA.toBuffer()],\n          program.programId\n        );\n    \n        const vaultStateAccount = await connection.getAccountInfo(vaultStatePDA);\n        if (!vaultStateAccount) {\n          console.log(\"Vault not initialized. Initializing now...\");\n    \n          const initTxn = await program.methods\n            .initialize()\n            .accounts({\n              user: userPubkey,\n              vault_state: vaultStatePDA,\n              vault: vaultPDA,\n              system_program: SystemProgram.programId,\n            })\n            .rpc(); \n    \n          console.log(\"Vault initialized:\", initTxn);\n        }\n    \n        const txn = await program.methods\n          .deposit(lamports, new BN(orderId))\n          .accounts({\n            user: userPubkey,\n            vault_state: vaultStatePDA,\n            vault: vaultPDA,\n            system_program: SystemProgram.programId,\n          })\n          .rpc({\n            skipPreflight: true\n          });\n    \n        console.log(\"Deposit successful:\", txn);\n        return txn;\n    \n      } catch (err: any) {\n        retries--;\n        console.error(`Error transferring funds (${retries} retries left):`, err);\n        \n        if (err.message && (\n            err.message.includes(\"This transaction has already been processed\") || \n            err.message.includes(\"Transaction simulation failed\")\n          )) {\n          await sleep(1000);\n          continue;\n        }\n        \n        return false;\n      }\n    }\n    \n    return false;\n  }\n\n\n  export async function claimPosition(wallet: any, userPubKey: PublicKey, order_id: number, payoutAmount: number) {\n    let retries = 3;\n\n    while (retries > 0) {\n      try {\n        const provider = new AnchorProvider(connection, wallet, {\n          commitment: 'confirmed',\n          preflightCommitment: 'processed',\n        });\n\n        const program = new Program(idl as Idl, provider);\n        const bnOrderId = new BN(order_id);\n        const userPubkey = userPubKey;\n\n        const [vaultStatePDA] = PublicKey.findProgramAddressSync(\n          [Buffer.from('vault_state'), userPubkey.toBuffer()],\n          program.programId\n        );\n        \n        const [vaultPDA] = PublicKey.findProgramAddressSync(\n          [Buffer.from('vault'), vaultStatePDA.toBuffer()],\n          program.programId\n        );\n        \n        const [positionPDA] = PublicKey.findProgramAddressSync(\n          [\n            Buffer.from('position'),\n            userPubkey.toBuffer(),\n            bnOrderId.toArrayLike(Buffer, 'le', 8)\n          ],\n          program.programId\n        );\n    \n        const [tradingPoolPDA] = PublicKey.findProgramAddressSync(\n          [Buffer.from('trading_pool')],\n          program.programId\n        );\n        \n        const [tradingPoolVaultPDA] = PublicKey.findProgramAddressSync(\n          [Buffer.from('trading_pool_vault'), tradingPoolPDA.toBuffer()],\n          program.programId\n        );\n        \n        const programId = program.programId;\n        \n        const data = Buffer.from([168, 90, 89, 44, 203, 246, 210, 46]); \n        \n        const orderIdBuffer = bnOrderId.toArrayLike(Buffer, 'le', 8);\n        const instructionData = Buffer.concat([data, orderIdBuffer]);\n        \n        const ix = new TransactionInstruction({\n          programId,\n          keys: [\n            { pubkey: userPubkey, isSigner: true, isWritable: true },\n            { pubkey: positionPDA, isSigner: false, isWritable: true },\n            { pubkey: vaultPDA, isSigner: false, isWritable: true },\n            { pubkey: vaultStatePDA, isSigner: false, isWritable: false },\n            { pubkey: tradingPoolPDA, isSigner: false, isWritable: true },\n            { pubkey: tradingPoolVaultPDA, isSigner: false, isWritable: true },\n            { pubkey: SystemProgram.programId, isSigner: false, isWritable: false }\n          ],\n          data: instructionData\n        });\n\n        const transaction = new Transaction().add(ix);\n        \n        const { blockhash } = await connection.getLatestBlockhash('confirmed');\n        transaction.recentBlockhash = blockhash;\n        transaction.feePayer = userPubkey;\n        \n        const signedTransaction = await wallet.signTransaction(transaction);\n        \n        const txn = await connection.sendRawTransaction(\n          signedTransaction.serialize(),\n          { skipPreflight: true }\n        );\n        \n        await connection.confirmTransaction(txn, 'confirmed');\n\n        console.log(\"Claim position successful:\", txn);\n\n        await withdrawFundsFromVault(wallet, payoutAmount, order_id);\n        return txn;\n      } catch (err: any) {\n        retries--;\n        console.error(`Error claiming position (${retries} retries left):`, err);\n        \n        if (err.message && (\n            err.message.includes(\"This transaction has already been processed\") || \n            err.message.includes(\"Transaction simulation failed\")\n          )) {\n          await sleep(1000);\n          continue;\n        }\n        \n        return false;\n      }\n    }\n    \n    return false;\n  }\n\n\n  export async function withdrawFundsFromVault(wallet: any, amount: number, orderId: number = 1) {\n    let retries = 3; \n    \n    while (retries > 0) {\n      try {\n        const provider = new AnchorProvider(connection, wallet, {\n          commitment: 'confirmed',\n          preflightCommitment: 'processed',\n        });\n\n        const program = new Program(\n          idl as Idl,\n          // \"9bqQoWC9ovH3FFGzEAV2MJJkF1uNuS4EVGZ2SmRw17w8\",\n          provider\n        );\n    \n        const userPubkey = provider.wallet.publicKey;\n    \n        const lamports = new BN(amount * LAMPORTS_PER_SOL);\n    \n        const [vaultStatePDA] = await PublicKey.findProgramAddressSync(\n          [Buffer.from(\"vault_state\"), userPubkey.toBuffer()],\n          program.programId\n        );\n    \n        const [vaultPDA] = await PublicKey.findProgramAddressSync(\n          [Buffer.from(\"vault\"), vaultStatePDA.toBuffer()],\n          program.programId\n        );\n\n        const txn = await program.methods\n          .withdraw(lamports, new BN(orderId))\n          .accounts({\n            user: userPubkey,\n            vault_state: vaultStatePDA,\n            vault: vaultPDA,\n            system_program: SystemProgram.programId,\n          })\n          .rpc({\n            skipPreflight: true\n          });\n\n        console.log(\"Withdrawal successful:\", txn);\n        return txn;\n      } catch (err: any) {\n        retries--;\n        console.error(`Error withdrawing funds (${retries} retries left):`, err);\n        \n        if (err.message && (\n            err.message.includes(\"This transaction has already been processed\") || \n            err.message.includes(\"Transaction simulation failed\")\n          )) {\n          await sleep(1000);\n          continue;\n        }\n        \n        return false;\n      }\n    }\n    \n    return false;\n  }"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1664, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/app/lib/supabaseClient.ts"],"sourcesContent":["\"use client\";\n\nimport {createClient} from \"@supabase/supabase-js\";\nimport {Database} from \"../types/database.types\";\n\n\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_KEY;\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\n\nif (!supabaseKey || !supabaseUrl) {\n    throw new Error(\"Missing Supabase environment variables\");\n}\n\nexport const supabaseAdmin = createClient<Database>(supabaseUrl, supabaseKey ,{\n    auth: {\n        autoRefreshToken: false,\n        persistSession: false,\n    }\n});\n\nexport type Tables = Database['public']['Tables'];"],"names":[],"mappings":";;;AAEA;AAFA;;AAMA,MAAM;AACN,MAAM;AAEN,uCAAkC;;AAElC;AAEO,MAAM,gBAAgB,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAY,aAAa,aAAa;IAC1E,MAAM;QACF,kBAAkB;QAClB,gBAAgB;IACpB;AACJ","debugId":null}},
    {"offset": {"line": 1687, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/app/services/orderbook.ts"],"sourcesContent":["\"use client\";\n\nimport { transferFundsToVault, withdrawFundsFromVault } from \"./vault\";\nimport { supabaseAdmin } from \"../lib/supabaseClient\";\nimport { Order } from \"../types/database.types\";\n\ntype OrderSide = 'LONG' | 'SHORT';\n\ninterface PlaceOrderParams {\n  wallet: any;\n  amount: number;\n  side: OrderSide;\n  points: number;\n}\n\nexport async function fetchUserOrders(wallet: any): Promise<{ orders: Order[] | null; error?: string }> {\n  if (!wallet.publicKey) {\n    return { orders: null, error: \"Wallet not connected\" };\n  }\n\n  try {\n    const walletAddress = wallet.publicKey.toBase58();\n    \n    const { data: userData, error: userError } = await supabaseAdmin\n      .from('users')\n      .select('id')\n      .eq('wallet_address', walletAddress)\n      .single();\n\n    if (userError || !userData) {\n      return { orders: null, error: \"User not found\" };\n    }\n\n    const { data: orders, error: ordersError } = await supabaseAdmin\n      .from('orders')\n      .select('*')\n      .eq('user_id', userData.id)\n      .order('created_at', { ascending: false });\n\n    if (ordersError) {\n      throw ordersError;\n    }\n\n    return { orders: orders as Order[] };\n  } catch (err: any) {\n    console.error('Error fetching orders:', err);\n    return { \n      orders: null, \n      error: err.message || \"Error fetching orders\" \n    };\n  }\n}\n\nexport async function placeOrder({ wallet, amount, side, points }: PlaceOrderParams): Promise<{ success: boolean; error?: string; txHash?: string }> {\n  if (!wallet.publicKey) {\n    return { success: false, error: \"Wallet not connected\" };\n  }\n\n  try {\n    const walletAddress = wallet.publicKey.toBase58();\n    \n      // 1. Get or create user\n    const { data: userData, error: userError } = await supabaseAdmin\n      .from('users')\n      .upsert({ wallet_address: walletAddress }, { onConflict: 'wallet_address' })\n      .select('id')\n      .single();\n\n    if (userError || !userData) {\n      throw userError || new Error('Failed to fetch user data');\n    }\n\n    // 2. Create a partial order entry with PENDING status\n    const { data: orderData, error: createOrderError } = await supabaseAdmin\n      .from('orders')\n      .insert([\n        {\n          user_id: userData.id,\n          side,\n          points,\n          amount,\n          filled_amount: 0,\n          status: 'PENDING', // Use PENDING status initially\n        }\n      ])\n      .select('id')\n      .single();\n\n    if (createOrderError || !orderData) {\n      throw createOrderError || new Error('Failed to create order');\n    }\n\n    // 3. Transfer funds to vault using the order ID\n    const vaultResponse = await transferFundsToVault(wallet, amount, orderData.id);\n    \n    if (vaultResponse === false) {\n      // If vault transfer fails, update order status to CANCELLED\n      await supabaseAdmin\n        .from('orders')\n        .update({ status: 'CANCELLED' })\n        .eq('id', orderData.id);\n        \n      throw new Error('Vault deposit failed');\n    }\n\n    // 4. vaultResponse now contains the transaction hash\n    const txHash = typeof vaultResponse === 'string' ? vaultResponse : '';\n\n    // 5. Update user's balance\n    const { data: balanceData } = await supabaseAdmin\n      .from('balances')\n      .select('total_deposited, locked_amount')\n      .eq('user_id', userData.id)\n      .single();\n\n    console.log(\"Balance data:\", balanceData);\n\n    const totalDeposited = (balanceData?.total_deposited || 0) + amount;\n    const lockedAmount = (balanceData?.locked_amount || 0) + amount;\n\n    const { error: balanceError } = await supabaseAdmin\n      .from('balances')\n      .upsert({\n        user_id: userData.id,\n        total_deposited: totalDeposited,\n        locked_amount: lockedAmount,\n        updated_at: new Date().toISOString()\n      }, { onConflict: 'user_id' });\n\n    if (balanceError) {\n      throw balanceError;\n    }\n\n    // 6. Update the order with transaction hash and OPEN status\n    const { error: orderUpdateError } = await supabaseAdmin\n      .from('orders')\n      .update({\n        status: 'OPEN',\n        txn_hash: txHash\n      })\n      .eq('id', orderData.id);\n\n    if (orderUpdateError) {\n      throw orderUpdateError;\n    }\n\n    return { success: true, txHash };\n\n  } catch (err: any) {\n    console.error(\"Order placement error:\", err);\n    return { \n      success: false, \n      error: err.message || \"Error placing order\" \n    };\n  }\n}\n\nexport async function cancelOrder(wallet: any, orderId: number): Promise<{ success: boolean; error?: string; txHash?: string }> {\n  if (!wallet.publicKey) {\n    return { success: false, error: \"Wallet not connected\" };\n  }\n\n  try {\n    const walletAddress = wallet.publicKey.toBase58();\n    \n    // Get user ID from wallet address\n    const { data: userData, error: userError } = await supabaseAdmin\n      .from('users')\n      .select('id')\n      .eq('wallet_address', walletAddress)\n      .single();\n\n    if (userError || !userData) {\n      return { success: false, error: \"User not found\" };\n    }\n\n    // Get the order to cancel\n    const { data: orderData, error: orderError } = await supabaseAdmin\n      .from('orders')\n      .select('*')\n      .eq('id', orderId)\n      .eq('user_id', userData.id)\n      .single();\n\n    if (orderError || !orderData) {\n      return { success: false, error: \"Order not found\" };\n    }\n\n    const order = orderData as Order;\n    \n    // Check if the order is already filled or cancelled\n    if (order.status === 'FILLED' || order.status === 'CANCELLED') {\n      return { success: false, error: `Order already ${order.status.toLowerCase()}` };\n    }\n\n    // Calculate refund amount (remaining unfilled amount)\n    const refundAmount = order.amount - (order.filled_amount || 0);\n    \n    if (refundAmount <= 0) {\n      return { success: false, error: \"No funds to refund\" };\n    }\n\n    // Update order status to CANCELLED\n    const { error: updateError } = await supabaseAdmin\n      .from('orders')\n      .update({ status: 'CANCELLED' })\n      .eq('id', orderId);\n\n    if (updateError) {\n      throw updateError;\n    }\n\n    // Update user's balance (reduce locked amount)\n    const { data: balanceData } = await supabaseAdmin\n      .from('balances')\n      .select('locked_amount')\n      .eq('user_id', userData.id)\n      .single();\n\n    if (balanceData) {\n      const newLockedAmount = Math.max(0, (balanceData.locked_amount || 0) - refundAmount);\n\n      const { error: balanceError } = await supabaseAdmin\n        .from('balances')\n        .update({\n          locked_amount: newLockedAmount,\n          updated_at: new Date().toISOString()\n        })\n        .eq('user_id', userData.id);\n\n      if (balanceError) {\n        throw balanceError;\n      }\n    }\n\n    // Withdraw funds from vault back to the user's wallet\n    const withdrawResult = await withdrawFundsFromVault(wallet, refundAmount, orderId);\n    \n    if (!withdrawResult) {\n      throw new Error('Failed to withdraw funds from vault');\n    }\n\n    return { \n      success: true, \n      txHash: typeof withdrawResult === 'string' ? withdrawResult : undefined \n    };\n  } catch (err: any) {\n    console.error('Order cancellation error:', err);\n    return { \n      success: false, \n      error: err.message || \"Error cancelling order\" \n    };\n  }\n}\n\nexport async function fetchOrderbook(): Promise<{ \n  longOrders: { points: number, totalAmount: number }[],\n  shortOrders: { points: number, totalAmount: number }[], \n  error?: string \n}> {\n  try {\n    const { data: orders, error: ordersError } = await supabaseAdmin\n      .from('orders')\n      .select('*')\n      .in('status', ['OPEN', 'PARTIALLY_FILLED'])\n      .order('points', { ascending: true });\n\n    if (ordersError) {\n      throw ordersError;\n    }\n\n    // Group orders by side and percentage points\n    const longOrdersByPoints: Map<number, number> = new Map();\n    const shortOrdersByPoints: Map<number, number> = new Map();\n\n    // Process the orders\n    orders.forEach((order) => {\n      const remainingAmount = order.amount - (order.filled_amount || 0);\n      if (remainingAmount <= 0) return; // Skip if no remaining amount\n      \n      if (order.side === 'LONG') {\n        const current = longOrdersByPoints.get(order.points) || 0;\n        longOrdersByPoints.set(order.points, current + remainingAmount);\n      } else { \n        const current = shortOrdersByPoints.get(order.points) || 0;\n        shortOrdersByPoints.set(order.points, current + remainingAmount);\n      }\n    });\n\n    const longOrders = Array.from(longOrdersByPoints).map(([points, totalAmount]) => ({\n      points,\n      totalAmount\n    })).sort((a, b) => a.points - b.points); // Sort by points ascending\n\n    const shortOrders = Array.from(shortOrdersByPoints).map(([points, totalAmount]) => ({\n      points,\n      totalAmount\n    })).sort((a, b) => a.points - b.points); // Sort by points ascending\n\n    return { longOrders, shortOrders };\n  } catch (err: any) {\n    console.error('Error fetching orderbook:', err);\n    return { \n      longOrders: [], \n      shortOrders: [],\n      error: err.message || \"Error fetching orderbook\" \n    };\n  }\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1940, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/app/components/UserOrders.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect, useState } from 'react';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { fetchUserOrders, cancelOrder } from '../services/orderbook';\nimport { Order, OrderStatus } from '../types/database.types';\nimport { useNotifications } from '../context/NotificationContext';\n\n// Status badge component\nconst StatusBadge: React.FC<{ status: OrderStatus }> = ({ status }) => {\n  let color = '';\n  \n  switch (status) {\n    case 'OPEN':\n      color = 'bg-blue-500/20 text-blue-400 border-blue-500/50';\n      break;\n    case 'PARTIALLY_FILLED':\n      color = 'bg-yellow-500/20 text-yellow-400 border-yellow-500/50';\n      break;\n    case 'FILLED':\n      color = 'bg-green-500/20 text-green-400 border-green-500/50';\n      break;\n    case 'CANCELLED':\n      color = 'bg-red-500/20 text-red-400 border-red-500/50';\n      break;\n  }\n  \n  return (\n    <span className={`px-2 py-1 text-xs font-medium rounded-md border ${color}`}>\n      {status.replace('_', ' ')}\n    </span>\n  );\n};\n\n// Side badge component\nconst SideBadge: React.FC<{ side: 'LONG' | 'SHORT' }> = ({ side }) => {\n  const color = side === 'LONG' \n    ? 'bg-red-500/20 text-red-400 border-red-500/50' \n    : 'bg-green-500/20 text-green-400 border-green-500/50';\n  return (\n    <span className={`px-2 py-1 text-xs font-medium rounded-md border ${color}`}>\n      {side === 'LONG' ? 'BREAK OUT' : 'STAY IN'}\n    </span>\n  );\n};\n\ninterface UserOrdersProps {\n  refreshTrigger?: number;\n  onOrderCancelled?: () => void;\n}\n\nconst ORDERS_PER_PAGE = 10;\n\nconst UserOrders: React.FC<UserOrdersProps> = ({ refreshTrigger = 0, onOrderCancelled }) => {\n  const wallet = useWallet();\n  const [orders, setOrders] = useState<Order[] | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [activeTab, setActiveTab] = useState<'all' | 'open' | 'filled' | 'cancelled'>('all');\n  const [cancellingOrderId, setCancellingOrderId] = useState<number | null>(null);\n  const { showNotification } = useNotifications();\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [refreshCounter, setRefreshCounter] = useState(0);\n\n  // Filter orders based on active tab\n  const filterOrders = (ordersToFilter: Order[]) => {\n    return ordersToFilter.filter(order => {\n      if (activeTab === 'all') return true;\n      if (activeTab === 'open') return order.status === 'OPEN' || order.status === 'PARTIALLY_FILLED';\n      if (activeTab === 'filled') return order.status === 'FILLED';\n      if (activeTab === 'cancelled') return order.status === 'CANCELLED';\n      return true;\n    });\n  };\n\n  const fetchOrders = async () => {\n    if (!wallet.publicKey) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const { orders: userOrders, error: ordersError } = await fetchUserOrders(wallet);\n      \n      if (ordersError) {\n        setError(ordersError);\n      } else {\n        setOrders(userOrders);\n        // After updating orders, check if current page would be out of bounds\n        const filteredCount = userOrders ? filterOrders(userOrders).length : 0;\n        const maxPages = Math.max(1, Math.ceil(filteredCount / ORDERS_PER_PAGE));\n        if (currentPage > maxPages) {\n          setCurrentPage(1);\n        }\n      }\n    } catch (err: any) {\n      setError(err.message || 'Failed to fetch orders');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Manual refresh function\n  const handleRefresh = () => {\n    setRefreshCounter(prev => prev + 1);\n    fetchOrders();\n  };\n\n  useEffect(() => {\n    if (wallet.publicKey) {\n      fetchOrders();\n    } else {\n      setOrders(null);\n    }\n  }, [wallet.publicKey, refreshTrigger, refreshCounter]);\n\n  // Get filtered orders\n  const filteredOrders = orders ? filterOrders(orders) : null;\n\n  // Update total pages whenever filtered orders change\n  useEffect(() => {\n    if (filteredOrders) {\n      const newTotalPages = Math.max(1, Math.ceil(filteredOrders.length / ORDERS_PER_PAGE));\n      setTotalPages(newTotalPages);\n      \n      // If current page is out of bounds, reset to first page\n      if (currentPage > newTotalPages) {\n        setCurrentPage(1);\n      }\n    }\n  }, [filteredOrders, activeTab]);\n\n  // Get current page of orders\n  const currentOrders = filteredOrders\n    ? filteredOrders.slice(\n        (currentPage - 1) * ORDERS_PER_PAGE,\n        currentPage * ORDERS_PER_PAGE\n      )\n    : [];\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\n  };\n\n  // Handle order cancellation\n  const handleCancelOrder = async (orderId: number) => {\n    if (!wallet.publicKey) {\n      showNotification('error', 'Wallet not connected', 'Please connect your wallet to cancel orders.');\n      return;\n    }\n\n    try {\n      setCancellingOrderId(orderId);\n      \n      const result = await cancelOrder(wallet, orderId);\n      \n      if (!result.success) {\n        throw new Error(result.error || 'Failed to cancel order');\n      }\n      \n      // Show success notification\n      showNotification(\n        'success',\n        'Order cancelled successfully',\n        `Order #${orderId} has been cancelled and funds returned to your wallet.`,\n        true,\n        6000\n      );\n      \n      // Refresh the orders list\n      handleRefresh();\n      \n      // Notify parent component if callback provided\n      if (onOrderCancelled) {\n        onOrderCancelled();\n      }\n    } catch (err: any) {\n      console.error('Order cancellation error:', err);\n      showNotification('error', 'Error cancelling order', err.message);\n    } finally {\n      setCancellingOrderId(null);\n    }\n  };\n\n  // Pagination controls\n  const handlePageChange = (newPage: number) => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  return (\n    <div className=\"w-full bg-zinc-800/80 backdrop-blur-md p-5 rounded-xl border border-zinc-700/50\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h3 className=\"text-lg font-semibold text-white\">Your Orders</h3>\n        <button \n          onClick={handleRefresh}\n          className=\"text-xs bg-zinc-700 hover:bg-zinc-600 text-white px-3 py-1 rounded-md transition-colors flex items-center gap-1\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3.5 w-3.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n          </svg>\n          Refresh\n        </button>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"flex space-x-2 mb-4 border-b border-zinc-700 pb-2\">\n        <button \n          className={`px-3 py-1 text-sm rounded-md transition-colors ${activeTab === 'all' ? 'bg-zinc-700 text-white' : 'text-zinc-400 hover:text-white'}`}\n          onClick={() => setActiveTab('all')}\n        >\n          All\n        </button>\n        <button \n          className={`px-3 py-1 text-sm rounded-md transition-colors ${activeTab === 'open' ? 'bg-zinc-700 text-white' : 'text-zinc-400 hover:text-white'}`}\n          onClick={() => setActiveTab('open')}\n        >\n          Open\n        </button>\n        <button \n          className={`px-3 py-1 text-sm rounded-md transition-colors ${activeTab === 'filled' ? 'bg-zinc-700 text-white' : 'text-zinc-400 hover:text-white'}`}\n          onClick={() => setActiveTab('filled')}\n        >\n          Filled\n        </button>\n        <button \n          className={`px-3 py-1 text-sm rounded-md transition-colors ${activeTab === 'cancelled' ? 'bg-zinc-700 text-white' : 'text-zinc-400 hover:text-white'}`}\n          onClick={() => setActiveTab('cancelled')}\n        >\n          Cancelled\n        </button>\n      </div>\n\n      {/* Orders content */}\n      <div className=\"overflow-hidden rounded-lg\">\n        {loading ? (\n          <div className=\"py-8 flex justify-center\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-4 h-4 border-2 border-blue-500 border-t-transparent rounded-full animate-spin\"></div>\n              <span className=\"text-zinc-400\">Loading orders...</span>\n            </div>\n          </div>\n        ) : error ? (\n          <div className=\"py-8 text-center text-red-400\">\n            <p>{error}</p>\n            <button \n              onClick={fetchOrders}\n              className=\"mt-2 text-xs underline hover:text-white\"\n            >\n              Try again\n            </button>\n          </div>\n        ) : !wallet.publicKey ? (\n          <div className=\"py-8 text-center text-zinc-400\">\n            <p>Connect your wallet to view orders</p>\n          </div>\n        ) : orders?.length === 0 ? (\n          <div className=\"py-8 text-center text-zinc-400\">\n            <p>No orders found</p>\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-zinc-700\">\n              <thead className=\"bg-zinc-900/50\">\n                <tr>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider\">ID</th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider\">Date</th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider\">Side</th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider\">Points</th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider\">\n                    Amount <span className=\"text-purple-400\">◎</span>\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider\">\n                    Filled <span className=\"text-purple-400\">◎</span>\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider\">Status</th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider\">Actions</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-zinc-800/30 divide-y divide-zinc-700\">\n                {currentOrders.map((order) => (\n                  <tr key={order.id} className=\"hover:bg-zinc-700/30 transition-colors\">\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-zinc-300\">#{order.id}</td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-zinc-300\">{formatDate(order.created_at)}</td>\n                    <td className=\"px-4 py-3 whitespace-nowrap\">\n                      <SideBadge side={order.side} />\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-zinc-300\">{order.points}%</td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-zinc-300\">\n                      <span className=\"text-purple-400 mr-1\">◎</span>\n                      {order.amount.toFixed(2)}\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-zinc-300\">\n                      {order.filled_amount ? (\n                        <div className=\"flex flex-col\">\n                          <span>\n                            <span className=\"text-purple-400 mr-1\">◎</span>\n                            {order.filled_amount.toFixed(2)}\n                          </span>\n                          <span className=\"text-xs text-zinc-500\">\n                            ({((order.filled_amount / order.amount) * 100).toFixed(1)}%)\n                          </span>\n                        </div>\n                      ) : (\n                        <span>\n                          <span className=\"text-purple-400 mr-1\">◎</span>\n                          0.00\n                        </span>\n                      )}\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap\">\n                      <StatusBadge status={order.status} />\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap\">\n                      {(order.status === 'OPEN' || order.status === 'PARTIALLY_FILLED') && (\n                        <button\n                          onClick={() => handleCancelOrder(order.id)}\n                          disabled={cancellingOrderId === order.id}\n                          className={`px-3 py-1 text-xs rounded-md transition-colors \n                            ${cancellingOrderId === order.id \n                              ? 'bg-zinc-600 text-zinc-400 cursor-not-allowed' \n                              : 'bg-red-500/20 text-red-400 hover:bg-red-500/30 border border-red-500/50'}`}\n                        >\n                          {cancellingOrderId === order.id ? (\n                            <div className=\"flex items-center\">\n                              <div className=\"w-3 h-3 border-2 border-red-400 border-t-transparent rounded-full animate-spin mr-1\"></div>\n                              Cancelling\n                            </div>\n                          ) : 'Cancel'}\n                        </button>\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            \n            {/* Pagination controls */}\n            {filteredOrders && filteredOrders.length > 0 && (\n              <div className=\"flex justify-between items-center pt-4 pb-2 px-2\">\n                <div className=\"text-xs text-zinc-400\">\n                  Showing {filteredOrders.length > 0 ? (currentPage - 1) * ORDERS_PER_PAGE + 1 : 0} to {Math.min(currentPage * ORDERS_PER_PAGE, filteredOrders.length)} of {filteredOrders.length} orders\n                </div>\n                <div className=\"flex space-x-2\">\n                  <button\n                    onClick={() => handlePageChange(1)}\n                    disabled={currentPage === 1}\n                    className=\"px-2 py-1 text-xs bg-zinc-700 text-zinc-300 rounded-md disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    &laquo;\n                  </button>\n                  <button\n                    onClick={() => handlePageChange(currentPage - 1)}\n                    disabled={currentPage === 1}\n                    className=\"px-2 py-1 text-xs bg-zinc-700 text-zinc-300 rounded-md disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    &lsaquo;\n                  </button>\n                  \n                  {/* Page number display */}\n                  <div className=\"px-3 py-1 text-xs bg-zinc-600 text-zinc-100 rounded-md\">\n                    {currentPage} / {totalPages}\n                  </div>\n                  \n                  <button\n                    onClick={() => handlePageChange(currentPage + 1)}\n                    disabled={currentPage === totalPages}\n                    className=\"px-2 py-1 text-xs bg-zinc-700 text-zinc-300 rounded-md disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    &rsaquo;\n                  </button>\n                  <button\n                    onClick={() => handlePageChange(totalPages)}\n                    disabled={currentPage === totalPages}\n                    className=\"px-2 py-1 text-xs bg-zinc-700 text-zinc-300 rounded-md disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    &raquo;\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserOrders; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2709, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/public/icon0.svg.mjs%20%28structured%20image%20object%29"],"sourcesContent":["import src from \"IMAGE\";\nexport default { src, width: 1563, height: 1563, blurDataURL: null, blurWidth: 0, blurHeight: 0 }\n"],"names":[],"mappings":";;;AAAA;;uCACe;IAAE,KAAA,wGAAA,CAAA,UAAG;IAAE,OAAO;IAAM,QAAQ;IAAM,aAAa;IAAM,WAAW;IAAG,YAAY;AAAE","debugId":null}},
    {"offset": {"line": 2728, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/app/services/positions.ts"],"sourcesContent":["\"use client\";\n\nimport { supabaseAdmin } from \"../lib/supabaseClient\";\nimport { \n  Connection, \n  PublicKey, \n  Transaction, \n  TransactionInstruction \n} from '@solana/web3.js';\nimport { connection } from \"../constants/constants\";\nimport { claimPosition as claimPositionFromVault } from \"./vault\";\n\nconst sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport interface Position {\n  id: number;\n  user_public_key: string;\n  order_id: number;\n  amount: number;\n  lower_bound: number;\n  upper_bound: number;\n  position_type: 0 | 1; \n  tx_signature: string;\n  created_at: string;\n  status: 'ACTIVE' | 'SETTLED' | 'CLAIMED';\n  settlement_time?: string;\n  settlement_price?: number;\n  payout_percentage?: number;\n  payout_amount?: number;\n  claimed_at?: string;\n  on_chain_position_address?: string;\n  last_checked_at?: string;\n  updated_at?: string;\n  btc_price_at_creation?: number; \n}\n\nexport async function fetchUserPositions(wallet: any): Promise<{ positions: Position[] | null; error?: string }> {\n  if (!wallet.publicKey) {\n    return { positions: null, error: \"Wallet not connected\" };\n  }\n\n  try {\n    const walletAddress = wallet.publicKey.toBase58();\n    \n    const { data: positions, error: positionsError } = await supabaseAdmin\n      .from('positions')\n      .select('*')\n      .eq('user_public_key', walletAddress)\n      .order('created_at', { ascending: false });\n\n    if (positionsError) {\n      throw positionsError;\n    }\n\n    return { positions: positions as Position[] };\n  } catch (err: any) {\n    console.error('Error fetching positions:', err);\n    return { \n      positions: null, \n      error: err.message || \"Error fetching positions\" \n    };\n  }\n}\n\nexport function subscribeToPositions(wallet: any, callback: (positions: Position[]) => void): () => void {\n  if (!wallet.publicKey) return () => {};\n  \n  const walletAddress = wallet.publicKey.toBase58();\n  \n  // Set up real-time subscription\n  const subscription = supabaseAdmin\n    .channel('positions-channel')\n    .on(\n      'postgres_changes',\n      {\n        event: '*', // Listen to all events (insert, update, delete)\n        schema: 'public',\n        table: 'positions',\n        filter: `user_public_key=eq.${walletAddress}`,\n      },\n      () => {\n        // When a change happens, fetch all positions\n        fetchUserPositions(wallet).then(result => {\n          if (result.positions) {\n            callback(result.positions);\n          }\n        });\n      }\n    )\n    .subscribe();\n\n  // Return unsubscribe function\n  return () => {\n    subscription.unsubscribe();\n  };\n}\n\nexport async function claimPosition(wallet: any, orderId: number, payoutAmount: number): Promise<{ success: boolean; error?: string; txHash?: string }> {\n  if (!wallet.publicKey) {\n    return { success: false, error: \"Wallet not connected\" };\n  }\n  \n  try {\n    const walletAddress = wallet.publicKey.toBase58();\n    const userPubKey = wallet.publicKey;\n    \n    const { data: position, error: positionError } = await supabaseAdmin\n      .from('positions')\n      .select('*')\n      .eq('order_id', orderId)\n      .eq('user_public_key', walletAddress)\n      .single();\n    \n    if (positionError || !position) {\n      return { \n        success: false, \n        error: positionError?.message || \"Position not found\" \n      };\n    }\n    \n    if (position.status !== 'SETTLED') {\n      return { \n        success: false, \n        error: `Position is in ${position.status} state. Only SETTLED positions can be claimed.`\n      };\n    }\n    \n    console.log(`Claiming position for order ID ${orderId}...`);\n    \n    // Call the vault claim function with the wallet, user public key, and order ID\n    const signature = await claimPositionFromVault(wallet, userPubKey, orderId, payoutAmount);\n    \n    if (!signature) {\n      throw new Error(\"Failed to claim position\");\n    }\n    \n    console.log(`Position claimed successfully! Transaction signature: ${signature}`);\n    console.log(`View on explorer: https://explorer.solana.com/tx/${signature}?cluster=devnet`);\n    \n    // Update position status in database\n    const { error: updateError } = await supabaseAdmin\n      .from('positions')\n      .update({\n        status: 'CLAIMED',\n        claimed_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      })\n      .eq('order_id', orderId);\n    \n    if (updateError) {\n      console.warn('Failed to update position status in the database, but transaction was successful');\n    } else {\n      console.log('Position status updated to CLAIMED in the database');\n    }\n    \n    return { success: true, txHash: signature };\n    \n  } catch (err: any) {\n    console.error('Error claiming position:', err);\n    return { \n      success: false, \n      error: err.message || \"Error claiming position\" \n    };\n  }\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2847, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/app/components/OrderBook.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchOrderbook } from '../services/orderbook';\n\ninterface OrderBookProps {\n  refreshTrigger?: number;\n}\n\nconst OrderBook: React.FC<OrderBookProps> = ({ refreshTrigger = 0 }) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [longOrders, setLongOrders] = useState<Array<{ points: number, totalAmount: number }>>([]);\n  const [shortOrders, setShortOrders] = useState<Array<{ points: number, totalAmount: number }>>([]);\n\n  // Fetch orderbook data\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const { longOrders: longs, shortOrders: shorts, error: fetchError } = await fetchOrderbook();\n      \n      if (fetchError) {\n        setError(fetchError);\n      } else {\n        // Sort shorts descending by points (higher percentages at top)\n        const sortedShorts = [...shorts].sort((a, b) => b.points - a.points);\n        // Sort longs descending by points (higher percentages at top)\n        const sortedLongs = [...longs].sort((a, b) => b.points - a.points);\n        \n        setShortOrders(sortedShorts);\n        setLongOrders(sortedLongs);\n      }\n    } catch (err: any) {\n      setError(err.message || 'Failed to fetch orderbook');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Calculate volume bars widths for visualization\n  const calculateVolumeBar = (amount: number, side: 'long' | 'short') => {\n    const maxVolume = side === 'short' \n      ? Math.max(...shortOrders.map(o => o.totalAmount), 1)\n      : Math.max(...longOrders.map(o => o.totalAmount), 1);\n    \n    const percentage = (amount / maxVolume) * 100;\n    return `${Math.min(Math.max(percentage, 5), 100)}%`;\n  };\n\n  // Load data when component mounts or refreshTrigger changes\n  useEffect(() => {\n    fetchData();\n    \n    // Set up auto-refresh interval (e.g., every 30 seconds)\n    const interval = setInterval(fetchData, 30000);\n    \n    // Clean up interval on unmount\n    return () => clearInterval(interval);\n  }, [refreshTrigger]);\n\n  return (\n    <div className=\"bg-zinc-800 h-[500px] p-3 rounded-xl border border-zinc-700 flex flex-col\">\n      <div className=\"flex justify-between items-center mb-3\">\n        <h3 className=\"text-sm font-medium text-zinc-300\">Order Book</h3>\n        <button \n          onClick={fetchData}\n          className=\"text-xs bg-zinc-700 hover:bg-zinc-600 text-zinc-400 px-2 py-1 rounded-md transition-colors\"\n          title=\"Refresh orderbook\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3.5 w-3.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n          </svg>\n        </button>\n      </div>\n      \n      {/* Order book table */}\n      <div className=\"flex-1 overflow-hidden flex flex-col text-xs\">\n        <div className=\"grid grid-cols-2 py-2 border-b border-zinc-700 sticky top-0 bg-zinc-800 z-10\">\n          <div className=\"text-center font-medium text-zinc-400\">Volatility %</div>\n          <div className=\"text-right text-zinc-400\">Total <span className=\"text-purple-400\">◎</span></div>\n        </div>\n        \n        { \n        error ? (\n          <div className=\"flex-1 flex items-center justify-center text-red-400 text-sm\">\n            <p>{error}</p>\n          </div>\n        ) : (\n          <div className=\"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-zinc-600 scrollbar-track-zinc-800\">\n            {/* Asks/Shorts section - top */}\n            <div className=\"bg-opacity-5\">\n              {shortOrders.length > 0 ? (\n                shortOrders.map((order, i) => (\n                  <div key={`short-${i}`} className=\"grid grid-cols-2 py-1 relative\">\n                    {/* Red volume visualization bar */}\n                    <div \n                      className=\"absolute right-0 top-0 h-full bg-green-500/10 z-0\" \n                      style={{ width: calculateVolumeBar(order.totalAmount, 'short') }}\n                    ></div>\n                    \n                    {/* Order data */}\n                    <div className=\"text-center font-medium text-green-400 z-10\">{order.points.toFixed(1)}%</div>\n                    <div className=\"text-right text-zinc-300 z-10\">{order.totalAmount.toFixed(3)}</div>\n                  </div>\n                ))\n              ) : (\n                <div className=\"py-2 text-center text-zinc-500\">No short orders</div>\n              )}\n            </div>\n            \n            {/* Spread section - middle */}\n            <div className=\"py-2 px-2 bg-zinc-700/20 border-y border-zinc-700 my-1\">\n              <div className=\"flex justify-between text-zinc-400\">\n                <span>Spread</span>\n                <span>\n                  {shortOrders.length > 0 && longOrders.length > 0 \n                    ? `${(Math.min(...shortOrders.map(o => o.points)) - Math.max(...longOrders.map(o => o.points))).toFixed(1)}%` \n                    : '—'}\n                </span>\n              </div>\n            </div>\n            \n            {/* Bids/Longs section - bottom */}\n            <div className=\"bg-opacity-5\">\n              {longOrders.length > 0 ? (\n                longOrders.map((order, i) => (\n                  <div key={`long-${i}`} className=\"grid grid-cols-2 py-1 relative\">\n                    {/* Green volume visualization bar */}\n                    <div \n                      className=\"absolute right-0 top-0 h-full bg-red-500/10 z-0\" \n                      style={{ width: calculateVolumeBar(order.totalAmount, 'long') }}\n                    ></div>\n                    \n                    {/* Order data */}\n                    <div className=\"text-center font-medium text-red-400 z-10\">{order.points.toFixed(1)}%</div>\n                    <div className=\"text-right text-zinc-300 z-10\">{order.totalAmount.toFixed(3)}</div>\n                  </div>\n                ))\n              ) : (\n                <div className=\"py-2 text-center text-zinc-500\">No long orders</div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Info footer */}\n      <div className=\"mt-2 pt-2 border-t border-zinc-700 text-xs text-zinc-500 flex justify-between\">\n        <span>Volatility-based Orderbook</span>\n        <span>Sorted by percentage</span>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderBook; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3191, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/app/components/Dashboard.tsx"],"sourcesContent":["\"use client\";\nimport Image from 'next/image';\nimport BTCChart from './BTCChart';\nimport { useEffect, useState } from 'react';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletMultiButton } from '@solana/wallet-adapter-react-ui';\nimport { supabaseAdmin } from '../lib/supabaseClient';\nimport PlaceOrderPanel from './PlaceOrderPanel';\nimport { placeOrder } from '../services/orderbook';\nimport UserOrders from './UserOrders';\nimport { useNotifications } from '../context/NotificationContext';\nimport logo from \"../../public/icon0.svg\";\nimport { fetchUserBalance } from '../services/balance';\nimport { fetchUserPositions, Position } from '../services/positions';\nimport OrderBook from './OrderBook';\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\nimport { connection } from \"../constants/constants\";\n\ninterface DashboardProps {\n  onBackClick: () => void;\n  onPositionsClick: () => void;\n}\n\n\nconst Dashboard = ({ onBackClick, onPositionsClick}: DashboardProps) => {\n\n  const [percent, setPercent] = useState(1.5);\n  const [price, setPrice] = useState<number>(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [bounds, setBounds] = useState<{ upper: number | null; lower: number | null }>({\n    upper: null,\n    lower: null,\n  });\n  const [priceChange, setPriceChange] = useState<number | null>(null);\n  const [refreshOrdersCounter, setRefreshOrdersCounter] = useState(0);\n  const [balance, setBalance] = useState<number>(0);\n  const [predictionsMade, setPredictionsMade] = useState<number>(0);\n  const [orderLoading, setOrderLoading] = useState(false);\n  const [activePositions, setActivePositions] = useState<Position[]>([]);\n  const [selectedPosition, setSelectedPosition] = useState<Position | null>(null);\n  const [successRate, setSuccessRate] = useState<number>(0);\n  const wallet = useWallet();\n  const { showNotification } = useNotifications();\n\n  // Function to refresh orders list\n  const refreshOrders = () => {\n    setRefreshOrdersCounter(prev => prev + 1);\n  };\n\n  // Function to get wallet balance\n  const getWalletBalance = async () => {\n    if (!wallet.publicKey) return 0;\n    \n    try {\n      const balance = await connection.getBalance(wallet.publicKey);\n      return balance / LAMPORTS_PER_SOL; // Convert lamports to SOL\n    } catch (err) {\n      console.error('Error fetching wallet balance:', err);\n      return 0;\n    }\n  };\n\n  // Refresh balance when wallet changes or new order is placed\n  useEffect(() => {\n    if (wallet.publicKey) {\n      // Fetch user's wallet balance\n      getWalletBalance().then(walletBalance => {\n        setBalance(walletBalance);\n      });\n\n      // Check for active positions\n      fetchUserPositions(wallet).then(({ positions }) => {\n        if (positions) {\n          // Find all active positions\n          const active = positions.filter(p => p.status === 'ACTIVE');\n          setActivePositions(active);\n          \n          // Select first position by default if available and none is currently selected\n          if (active.length > 0 && !selectedPosition) {\n            setSelectedPosition(active[0]);\n          } else if (active.length === 0) {\n            setSelectedPosition(null);\n        }\n\n          // Count total positions\n          setPredictionsMade(positions.length);\n          \n          // Calculate success rate\n          const settledOrClaimedPositions = positions.filter(p => p.status === 'SETTLED' || p.status === 'CLAIMED');\n          \n          // Calculate win count (positions with payout_amount > amount)\n          const winCount = settledOrClaimedPositions.filter(p => {\n            if (p.status === 'CLAIMED' && p.payout_amount) {\n              return p.payout_amount > p.amount;\n            } else if (p.status === 'SETTLED' && p.payout_percentage) {\n              // For settled but not claimed, estimate from payout percentage\n              return p.payout_percentage > 100;\n            }\n            return false;\n          }).length;\n          \n          // Calculate success rate\n          const calculatedSuccessRate = settledOrClaimedPositions.length > 0 \n            ? (winCount / settledOrClaimedPositions.length) * 100 \n            : 0;\n          \n          setSuccessRate(calculatedSuccessRate);\n        }\n      });\n    } else {\n      setBalance(0);\n      setPredictionsMade(0);\n      setActivePositions([]);\n      setSelectedPosition(null);\n      setSuccessRate(0);\n    }\n  }, [wallet.publicKey, refreshOrdersCounter]);\n\n  // Fetch BTC price on load and periodically\n  useEffect(() => {\n    const fetchPrice = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const res = await fetch(\n          'https://hermes.pyth.network/v2/updates/price/latest?ids[]=0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43'\n        );\n        \n        if (!res.ok) {\n          throw new Error(`API request failed with status: ${res.status}`);\n        }\n        \n        const data = await res.json();\n        \n        if (data && data.parsed && data.parsed[0] && data.parsed[0].price) {\n          const pythPrice = data.parsed[0].price;\n          const scaledPrice = pythPrice.price * Math.pow(10, pythPrice.expo);\n          const roundedPrice = parseFloat(scaledPrice.toFixed(2));\n          \n          if (price > 0) {\n            const change = ((roundedPrice - price) / price) * 100;\n            setPriceChange(parseFloat(change.toFixed(2)));\n          } else {\n            setPriceChange(0);\n          }\n          \n          setPrice(roundedPrice);\n          \n          // Only calculate bounds if there's no selected position\n          // If there's a selected position, we'll use its bounds\n          if (!selectedPosition) {\n            const upper = roundedPrice * (1 + percent / 100);\n            const lower = roundedPrice * (1 - percent / 100);\n            \n            setBounds({ \n              upper: parseFloat(upper.toFixed(2)), \n              lower: parseFloat(lower.toFixed(2)) \n            });\n          }\n          \n          setIsLoading(false);\n        } else {\n          console.error('Invalid Pyth price data format:', data);\n          throw new Error('Invalid price data format');\n        }\n      } catch (e) {\n        console.error('Failed to fetch price:', e);\n        setError(e instanceof Error ? e.message : 'Failed to fetch price');\n        setIsLoading(false);\n      }\n    };\n\n    fetchPrice();\n    const interval = setInterval(fetchPrice, 1000); // Fetch every 5s\n    return () => clearInterval(interval);\n  }, [percent, selectedPosition]); // Remove price from dependencies to avoid unnecessary requests\n  \n  // Calculate bounds when selectedPosition changes\n  useEffect(() => {\n    if (!selectedPosition && price > 0) {\n      // When switching to default, recalculate bounds based on current price\n      const upper = price * (1 + percent / 100);\n      const lower = price * (1 - percent / 100);\n      \n      setBounds({ \n        upper: parseFloat(upper.toFixed(2)), \n        lower: parseFloat(lower.toFixed(2)) \n      });\n    }\n  }, [selectedPosition, price, percent]);\n\n  // Handle order placement\n  const handlePlaceOrder = async (order: { side: 'LONG' | 'SHORT'; amount: number; percent: number }) => {\n    if (!wallet.publicKey) {\n      showNotification('error', 'Wallet not connected', 'Please connect your wallet to place orders.');\n      return;\n    }\n\n    try {\n      setOrderLoading(true);\n      const result = await placeOrder({\n        wallet,\n        amount: order.amount,\n        side: order.side,\n        points: order.percent,\n      });\n\n      setOrderLoading(false);\n\n      if (!result.success) {\n        throw new Error(result.error || 'Failed to place order');\n      }\n      \n      // Increment the refresh counter to trigger order list refresh\n      refreshOrders();\n      \n      // Show success notification with transaction hash\n      showNotification(\n        'success',\n        `${order.side == 'LONG' ? 'BREAK OUT' : 'STAY IN'} order placed successfully!`,\n        `Amount: ◎${order.amount} | Volatility: ${order.percent.toFixed(1)}% | Txn: ${result.txHash?.substring(0, 8)}...${result.txHash?.substring(result.txHash.length - 8) || ''}`,\n        true,\n        6000\n      );\n    } catch (err: any) {\n      setOrderLoading(false);\n      console.error('Order error:', err);\n      showNotification('error', 'Error placing order', err.message);\n    }\n  };\n\n  // Create a position selector UI\n  const PositionSelector = () => {\n    if (activePositions.length === 0) return null;\n    \n    // Function to handle position selection\n    const handlePositionSelect = (position: Position | null) => {\n      setSelectedPosition(position);\n      \n      // If selecting null (Default), recalculate bounds based on current price\n      if (!position && price > 0) {\n        const upper = price * (1 + percent / 100);\n        const lower = price * (1 - percent / 100);\n        \n        setBounds({ \n          upper: parseFloat(upper.toFixed(2)), \n          lower: parseFloat(lower.toFixed(2)) \n        });\n      }\n    };\n    \n    return (\n      <div className=\"mb-4 p-3 bg-zinc-700 rounded-lg\">\n        <h4 className=\"text-sm font-medium text-zinc-300 mb-2\">Active Positions</h4>\n        <div className=\"flex flex-wrap gap-2\">\n          {activePositions.map(position => (\n            <button\n              key={position.id}\n              onClick={() => handlePositionSelect(position)}\n              className={`px-3 py-1 text-xs rounded-md transition-colors ${\n                selectedPosition?.id === position.id\n                  ? position.position_type === 0\n                    ? 'bg-green-500 text-white' // SHORT\n                    : 'bg-red-500 text-white' // LONG\n                    \n                  : 'bg-zinc-600 text-zinc-300 hover:bg-zinc-500'\n              }`}\n            >\n              #{position.id} - {position.position_type === 0 ? 'STAY IN' : 'BREAK OUT'} \n              (${position.lower_bound.toFixed(0)} - ${position.upper_bound.toFixed(0)})\n            </button>\n          ))}\n          <button\n            onClick={() => handlePositionSelect(null)}\n            className={`px-3 py-1 text-xs rounded-md transition-colors ${\n              !selectedPosition\n                ? 'bg-blue-500 text-white'\n                : 'bg-zinc-600 text-zinc-300 hover:bg-zinc-500'\n            }`}\n          >\n            Default\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-zinc-900 text-white\">\n      {/* Dashboard Content */}\n      <div className=\"min-h-screen\">\n        {/* Header */}\n       <header className=\"p-6 border-b border-zinc-800\">\n          <div className=\"max-w-7xl mx-auto flex justify-between items-center\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"w-10 h-10 bg-white rounded-lg flex items-center justify-center border border-zinc-700\">\n                 <Image src={logo} alt=\"logo\" />\n              </div>\n              <span className=\"text-xl font-bold\">Bound Market</span>\n              \n              {/* Add Positions button here */}\n              <button\n                onClick={onPositionsClick}\n                className=\"ml-4 px-4 py-2 bg-zinc-700 hover:bg-zinc-600 hover:cursor-pointer text-white font-medium rounded-lg flex items-center gap-2 transition-colors\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                </svg>\n                Positions\n              </button>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <WalletMultiButton className=\"px-8 py-3 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-xl transition-all duration-200\" />\n            </div>\n          </div>\n        </header>\n\n        {/* Main Content */}\n        <main className=\"p-6\">\n          <div className=\"max-w-7xl mx-auto\">\n            {/* Back button */}\n            <button \n              className=\"mb-6 flex items-center gap-2 text-zinc-400 hover:text-white transition-colors hover:cursor-pointer\"\n              onClick={onBackClick}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n              </svg>\n              Back to Home\n            </button>\n\n\n            {/* Overview Cards */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n              <div className=\"bg-zinc-800 p-6 rounded-xl border border-zinc-700\">\n                <div className=\"flex justify-between mb-4\">\n                  <div>\n                    <h3 className=\"text-zinc-400 text-sm\">Balance</h3>\n                    <p className=\"text-2xl font-semibold\">{balance.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2})} <span className=\"text-purple-400\">SOL</span></p>\n                  </div>\n                  <div className=\"w-10 h-10 bg-purple-400/10 rounded-full flex items-center justify-center\">\n                    <span className=\"text-purple-400 text-xl font-bold\">◎</span>\n                  </div>\n                </div>\n                {wallet.publicKey ? (\n                  <div className=\"text-xs text-zinc-400 overflow-hidden text-ellipsis\">\n                    {wallet.publicKey.toBase58().substring(0, 8)}...{wallet.publicKey.toBase58().substring(wallet.publicKey.toBase58().length - 8)}\n                    <span className=\"ml-2 text-zinc-500\">(Devnet)</span>\n                  </div>\n                ) : (\n                  <div className=\"text-xs text-zinc-400\">\n                    Connect wallet to view\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"bg-zinc-800 p-6 rounded-xl border border-zinc-700\">\n                <div className=\"flex justify-between mb-4\">\n                  <div>\n                    <h3 className=\"text-zinc-400 text-sm\">Predictions Made</h3>\n                    <p className=\"text-2xl font-semibold\">{predictionsMade}</p>\n                  </div>\n                  <div className=\"w-10 h-10 bg-blue-400/10 rounded-full flex items-center justify-center\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-blue-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                    </svg>\n                  </div>\n                </div>\n                <div className=\"flex items-center\">\n                  {predictionsMade > 0 ? (\n                    <span className=\"text-zinc-400 text-sm\">Active: {activePositions.length}</span>\n                  ) : (\n                    <span className=\"text-zinc-400 text-sm\">No predictions yet</span>\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"bg-zinc-800 p-6 rounded-xl border border-zinc-700\">\n                <div className=\"flex justify-between mb-4\">\n                  <div>\n                    <h3 className=\"text-zinc-400 text-sm\">Success Rate</h3>\n                    <p className=\"text-2xl font-semibold\">{successRate.toFixed(1)}%</p>\n                  </div>\n                  <div className=\"w-10 h-10 bg-purple-400/10 rounded-full flex items-center justify-center\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-purple-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                    </svg>\n                  </div>\n                </div>\n                <div className=\"flex items-center\">\n                  {predictionsMade > 0 ? (\n                    <span className=\"text-zinc-400 text-sm\">Based on {predictionsMade} positions</span>\n                  ) : (\n                    <span className=\"text-zinc-400 text-sm\">No positions yet</span>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* Main Dashboard Panel */}\n            <div className=\"bg-zinc-800 p-6 rounded-xl border border-zinc-700 mb-8\">\n              \n\n              {/* Display active position selector if there are any */}\n              {activePositions.length > 0 && <PositionSelector />}\n\n              {/* Chart layout with order book */}\n              <div className=\"flex flex-col lg:flex-row gap-6 mb-6\">\n                {/* Main chart area - left side */}\n                <div className=\"lg:w-3/4\">\n                  <div className=\"h-[500px] w-full mb-6\">\n                    <BTCChart \n                      bounds={bounds} \n                      price={price}\n                      activePositions={activePositions.length > 0 ? activePositions : null}\n                      selectedPosition={selectedPosition}\n                    />\n                  </div>\n                </div>\n\n                {/* Order book - right side */}\n                <div className=\"lg:w-1/4\">\n                  <OrderBook refreshTrigger={refreshOrdersCounter} />\n                </div>\n              </div>\n\n              {/* Volatility Range Controls and Price Info Cards - Below chart */}\n              <div className=\"flex flex-col lg:flex-row gap-4\">\n                {/* Volatility Range Card - Left */}\n                <div className=\"lg:w-3/4 bg-zinc-700 p-4 rounded-xl border border-zinc-600 flex flex-col\">\n                  <div className=\"flex-1\">\n                    <PlaceOrderPanel\n                      percent={percent}\n                      setPercent={setPercent}\n                      isLoading={orderLoading}\n                      onPlaceOrder={async (order) => {\n                        await handlePlaceOrder(order);\n                      }}\n                    />\n                  </div>\n                </div>\n                \n                {/* Price and Bounds Cards - Right */}\n                <div className=\"lg:w-1/4 flex flex-col gap-2\">\n                  {/* Current BTC Price Card */}\n                  <div className=\"bg-zinc-700 p-5 rounded-xl border border-zinc-600 flex-1 flex flex-col justify-center\">\n                    <h3 className=\"text-sm font-medium text-zinc-400 mb-2\">Current BTC Price (Pyth)</h3>\n                    <div className=\"flex items-end gap-2\">\n                      {error ? (\n                        <div className=\"text-2xl font-bold text-rose-400\">{error}</div>\n                      ) : (\n                        <>\n                          <span className=\"text-2xl font-bold\">\n                            ${price.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n                          </span>\n                        </>\n                      )}\n                    </div>\n                  </div>\n                  \n                  {/* Upper Bound Card */}\n                  <div className=\"bg-zinc-700 p-4 rounded-lg border-l-4 border-[#FF4C4C] flex-1 flex flex-col justify-center\">\n                    <div className=\"flex justify-between items-center\">\n                      <h3 className=\"text-sm font-medium text-zinc-400\">Upper Bound</h3>\n                      <span className=\"text-xs bg-[#FF4C4C]/20 text-[#FF4C4C] px-2 py-0.5 rounded-full\">+{percent.toFixed(1)}%</span>\n                    </div>\n                    <p className=\"text-xl font-semibold mt-1\">${selectedPosition?.status === 'ACTIVE' ? selectedPosition.upper_bound.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2}) : bounds.upper?.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2})}</p>\n                  </div>\n                  \n                  {/* Lower Bound Card */}\n                  <div className=\"bg-zinc-700 p-4 rounded-lg border-l-4 border-[#00FF99] flex-1 flex flex-col justify-center\">\n                    <div className=\"flex justify-between items-center\">\n                      <h3 className=\"text-sm font-medium text-zinc-400\">Lower Bound</h3>\n                      <span className=\"text-xs bg-[#00FF99]/20 text-[#00FF99] px-2 py-0.5 rounded-full\">-{percent.toFixed(1)}%</span>\n                    </div>\n                    <p className=\"text-xl font-semibold mt-1\">${selectedPosition?.status === 'ACTIVE' ? selectedPosition.lower_bound.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2}) : bounds.lower?.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2})}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Orders History Panel */}\n            <div className=\"mb-6\">\n              <UserOrders \n                refreshTrigger={refreshOrdersCounter} \n                onOrderCancelled={refreshOrders}\n              />\n            </div>\n          </div>\n        </main>\n      </div>\n      \n    </div>\n  );\n};\n\nexport default Dashboard;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4219, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/app/components/UserPositions.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect, useState } from 'react';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { motion } from 'framer-motion';\nimport { Position, fetchUserPositions, subscribeToPositions, claimPosition } from '../services/positions';\nimport { useNotifications } from '../context/NotificationContext';\n\nconst POSITIONS_PER_PAGE = 10;\n\nconst UserPositions: React.FC = () => {\n  const wallet = useWallet();\n  const [positions, setPositions] = useState<Position[] | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [claimLoading, setClaimLoading] = useState<Record<number, boolean>>({});\n  const { showNotification } = useNotifications();\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [activeFilter, setActiveFilter] = useState<'all' | 'active' | 'settled' | 'claimed'>('all');\n  const [analytics, setAnalytics] = useState<any>(null);\n  const [refreshCounter, setRefreshCounter] = useState(0);\n\n  const fetchPositions = async () => {\n    if (!wallet.publicKey) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const { positions: userPositions, error: positionsError } = await fetchUserPositions(wallet);\n      \n      if (positionsError) {\n        setError(positionsError);\n      } else {\n        setPositions(userPositions);\n        // After updating positions, set current page to 1 if it would be out of bounds\n        const filteredCount = userPositions ? filterPositions(userPositions).length : 0;\n        const maxPages = Math.max(1, Math.ceil(filteredCount / POSITIONS_PER_PAGE));\n        if (currentPage > maxPages) {\n          setCurrentPage(1);\n        }\n      }\n    } catch (err: any) {\n      setError(err.message || 'Failed to fetch positions');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Manual refresh function\n  const handleRefresh = () => {\n    setRefreshCounter(prev => prev + 1);\n    fetchPositions();\n\n  };\n  const handleClaimPosition = async (position: Position) => {\n    if (!wallet.publicKey || !position.order_id) return;\n    \n    setClaimLoading(prev => ({ ...prev, [position.id]: true }));\n    \n    try {\n\n      const payoutAmount = position.amount * (position.payout_percentage! / 100);\n      const profit = payoutAmount - position.amount;\n      const profitText = profit >= 0 \n        ? `Profit: +◎${profit.toFixed(2)}` \n        : `Loss: -◎${Math.abs(profit).toFixed(2)}`;\n\n\n      const result = await claimPosition(wallet, position.order_id , payoutAmount);\n      \n      if (!result.success) {\n        throw new Error(result.error || 'Failed to claim position');\n      }\n\n      showNotification(\n        'success',\n        'Position claimed successfully!',\n        `Payout: ◎${payoutAmount.toFixed(5)} | ${profitText}`,\n        true,\n        6000\n      );\n      \n      // Update local state\n      setPositions(prevPositions => {\n        if (!prevPositions) return null;\n        return prevPositions.map(p => {\n          if (p.id === position.id) {\n            return {\n              ...p,\n              status: 'CLAIMED',\n              claimed_at: new Date().toISOString(),\n              payout_amount: payoutAmount\n            };\n          }\n          return p;\n        });\n      });\n      \n      // Fetch updated data\n      handleRefresh();\n      \n    } catch (err: any) {\n      console.error('Claim error:', err);\n      showNotification('error', 'Error claiming position', err.message);\n    } finally {\n      setClaimLoading(prev => ({ ...prev, [position.id]: false }));\n    }\n  };\n\n  // Filter positions based on active filter\n  const filterPositions = (positionsToFilter: Position[]) => {\n    return positionsToFilter.filter(position => {\n      if (activeFilter === 'all') return true;\n      if (activeFilter === 'active') return position.status === 'ACTIVE';\n      if (activeFilter === 'settled') return position.status === 'SETTLED';\n      if (activeFilter === 'claimed') return position.status === 'CLAIMED';\n      return true;\n    });\n  };\n\n  useEffect(() => {\n    if (wallet.publicKey) {\n      fetchPositions();\n\n      \n      const unsubscribe = subscribeToPositions(wallet, (updatedPositions) => {\n        setPositions(updatedPositions);\n\n        \n        if (positions && updatedPositions.length > positions.length) {\n          const newPositions = updatedPositions.filter(\n            (newPos) => !positions.some((oldPos) => oldPos.id === newPos.id)\n          );\n          \n          newPositions.forEach(position => {\n            showNotification(\n              'success',\n              `Trade executed: ${position.position_type === 0 ? 'SHORT' : 'LONG'} order matched!`,\n              `Amount: ◎${position.amount} - Transaction: ${position.tx_signature.substring(0, 8)}...${position.tx_signature.substring(position.tx_signature.length - 8)}`,\n              true,\n              8000\n            );\n          });\n        }\n\n        if (positions) {\n          updatedPositions.forEach(newPos => {\n            const oldPos = positions.find(p => p.id === newPos.id);\n            if (oldPos && oldPos.status !== newPos.status && newPos.status === 'SETTLED') {\n              const timeDiff = calculateTimeDiff(newPos.created_at, newPos.settlement_time!);\n              \n              const formattedPrice = (newPos.settlement_price || 0) * 1e-8;\n              \n              showNotification(\n                'info',\n                `Position settled: ${newPos.position_type === 0 ? 'SHORT' : 'LONG'}`,\n                `Duration: ${timeDiff} | Payout: ${newPos.payout_percentage}% | Breaking price: $${formattedPrice.toLocaleString()}`,\n                true,\n                8000\n              );\n            }\n          });\n        }\n      });\n      \n      return () => unsubscribe();\n    } else {\n      setPositions(null);\n      setAnalytics(null);\n    }\n  }, [wallet.publicKey, refreshCounter]);\n\n  // Update filtered positions when positions or filter changes\n  const filteredPositions = positions ? filterPositions(positions) : null;\n\n  // Update pagination when filtered positions change\n  useEffect(() => {\n    if (filteredPositions) {\n      const newTotalPages = Math.max(1, Math.ceil(filteredPositions.length / POSITIONS_PER_PAGE));\n      setTotalPages(newTotalPages);\n      \n      // If current page is out of bounds, reset to first page\n      if (currentPage > newTotalPages) {\n        setCurrentPage(1);\n      }\n    }\n  }, [filteredPositions, activeFilter]);\n\n  // Calculate current page positions\n  const currentPositions = filteredPositions\n    ? filteredPositions.slice(\n        (currentPage - 1) * POSITIONS_PER_PAGE,\n        currentPage * POSITIONS_PER_PAGE\n      )\n    : [];\n\n  const handlePageChange = (newPage: number) => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\n  };\n\n  const calculateTimeDiff = (start: string, end: string) => {\n    const startDate = new Date(start);\n    const endDate = new Date(end);\n    const diffMs = endDate.getTime() - startDate.getTime();\n    \n    const hours = Math.floor(diffMs / (1000 * 60 * 60));\n    const minutes = Math.floor((diffMs % (1000 * 60 * 60)) / (1000 * 60));\n    \n    return `${hours}h ${minutes}m`;\n  };\n\n  const formatBlockchainPrice = (rawPrice: number) => {\n    return (rawPrice * 1e-8).toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n  };\n\n  const StatusBadge = ({ status }: { status: Position['status'] }) => {\n    let color = '';\n    \n    switch (status) {\n      case 'ACTIVE':\n        color = 'bg-blue-500/20 text-blue-400 border-blue-500/50';\n        break;\n      case 'SETTLED':\n        color = 'bg-green-500/20 text-green-400 border-green-500/50';\n        break;\n      case 'CLAIMED':\n        color = 'bg-purple-500/20 text-purple-400 border-purple-500/50';\n        break;\n    }\n    \n    return (\n      <span className={`px-2 py-1 text-xs font-medium rounded-md border ${color}`}>\n        {status}\n      </span>\n    );\n  };\n\n\n  return (\n    <div className=\"w-full bg-zinc-800/80 backdrop-blur-md p-5 rounded-xl border border-zinc-700/50\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h3 className=\"text-lg font-semibold text-white\">Your Positions</h3>\n        <div className=\"flex space-x-2\">\n          <div className=\"flex rounded-md overflow-hidden\">\n            <button \n              onClick={() => setActiveFilter('all')}\n              className={`text-xs px-3 py-1 transition-colors ${activeFilter === 'all' ? 'bg-blue-500 text-white' : 'bg-zinc-700 text-zinc-300 hover:bg-zinc-600'}`}\n            >\n              All\n            </button>\n            <button \n              onClick={() => setActiveFilter('active')}\n              className={`text-xs px-3 py-1 transition-colors ${activeFilter === 'active' ? 'bg-blue-500 text-white' : 'bg-zinc-700 text-zinc-300 hover:bg-zinc-600'}`}\n            >\n              Active\n            </button>\n            <button \n              onClick={() => setActiveFilter('settled')}\n              className={`text-xs px-3 py-1 transition-colors ${activeFilter === 'settled' ? 'bg-blue-500 text-white' : 'bg-zinc-700 text-zinc-300 hover:bg-zinc-600'}`}\n            >\n              Settled\n            </button>\n            <button \n              onClick={() => setActiveFilter('claimed')}\n              className={`text-xs px-3 py-1 transition-colors ${activeFilter === 'claimed' ? 'bg-blue-500 text-white' : 'bg-zinc-700 text-zinc-300 hover:bg-zinc-600'}`}\n            >\n              Claimed\n            </button>\n          </div>\n          <button \n            onClick={handleRefresh}\n            className=\"text-xs bg-zinc-700 hover:bg-zinc-600 text-white px-3 py-1 rounded-md transition-colors flex items-center gap-1\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3.5 w-3.5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n            </svg>\n            Refresh\n          </button>\n        </div>\n      </div>\n\n      <div className=\"overflow-hidden rounded-lg\">\n        {loading ? (\n          <div className=\"py-8 flex justify-center\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-4 h-4 border-2 border-blue-500 border-t-transparent rounded-full animate-spin\"></div>\n              <span className=\"text-zinc-400\">Loading positions...</span>\n            </div>\n          </div>\n        ) : error ? (\n          <div className=\"py-8 text-center text-red-400\">\n            <p>{error}</p>\n            <button \n              onClick={fetchPositions}\n              className=\"mt-2 text-xs underline hover:text-white\"\n            >\n              Try again\n            </button>\n          </div>\n        ) : !wallet.publicKey ? (\n          <div className=\"py-8 text-center text-zinc-400\">\n            <p>Connect your wallet to view positions</p>\n          </div>\n        ) : positions?.length === 0 ? (\n          <div className=\"py-8 text-center text-zinc-400\">\n            <p>No positions found</p>\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-zinc-700\">\n              <thead className=\"bg-zinc-900/50\">\n                <tr>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider\">ID</th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider\">Date</th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider\">Status</th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider\">Type</th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider\">\n                    Amount\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider\">Execution Price</th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider\">Price Range</th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider\">Details</th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider\">Actions</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-zinc-800/30 divide-y divide-zinc-700\">\n                {currentPositions.map((position) => (\n                  <motion.tr \n                    key={position.id} \n                    className=\"hover:bg-zinc-700/30 transition-colors\"\n                    initial={{ opacity: 0, y: 10 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.3 }}\n                  >\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-zinc-300\">#{position.id}</td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-zinc-300\">{formatDate(position.created_at)}</td>\n                    <td className=\"px-4 py-3 whitespace-nowrap\">\n                      <StatusBadge status={position.status} />\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap\">\n                      <span className={`px-2 py-1 text-xs font-medium rounded-md border ${\n                        position.position_type === 1 \n                          ? 'bg-red-500/20 text-red-400 border-red-500/50' \n                          : 'bg-green-500/20 text-green-400 border-green-500/50'\n                      }`}>\n                        \n                        {position.position_type === 1 ? 'BREAK OUT' : 'STAY IN'}\n                      </span>\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-zinc-300\">\n                      <span className=\"text-purple-400 mr-1\">◎</span>\n                      {position.amount.toFixed(2)}\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-zinc-300\">\n                      { position.btc_price_at_creation ? position.btc_price_at_creation.toFixed(2) : '-'}\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-zinc-300\">\n                      ${position.lower_bound.toFixed(2)} - ${position.upper_bound.toFixed(2)}\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm\">\n                      {position.status === 'ACTIVE' ? (\n                        <span className=\"text-blue-400\">Active</span>\n                      ) : position.status === 'SETTLED' ? (\n                        <div className=\"text-green-400\">\n                          <p className=\"mb-1\">Breaking price: {position.settlement_price ? formatBlockchainPrice(position.settlement_price) : '-'}</p>\n                          <p className=\"mb-1\">Duration: {calculateTimeDiff(position.created_at, position.settlement_time!)}</p>\n                          <p>Payout: {position.payout_amount?.toFixed(5)}</p>\n                        </div>\n                      ) : position.status === 'CLAIMED' ? (\n                        <div className=\"text-purple-400\">\n                          <p className=\"mb-1\">Payout: ◎{position.payout_amount?.toFixed(5)}</p>\n                      \n                        </div>\n                      ) : null}\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm\">\n                      <a \n                        href={`https://explorer.solana.com/address/${position.on_chain_position_address}?cluster=devnet`} \n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\"\n                        className=\"text-blue-400 underline hover:text-blue-300 mr-2\"\n                      >\n                        View TX\n                      </a>\n                      {position.status === 'SETTLED' && (\n                        <button\n                          onClick={() => handleClaimPosition(position)}\n                          disabled={claimLoading[position.id]}\n                          className=\"px-3 py-1 bg-green-500 hover:bg-green-600 text-white rounded-md text-xs font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                        >\n                          {claimLoading[position.id] ? (\n                            <span className=\"flex items-center\">\n                              <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                              </svg>\n                              Claiming...\n                            </span>\n                          ) : 'Claim'}\n                        </button>\n                      )}\n                    </td>\n                  </motion.tr>\n                ))}\n              </tbody>\n            </table>\n            \n            {filteredPositions && filteredPositions.length > 0 && (\n              <div className=\"flex justify-between items-center pt-4 pb-2 px-2\">\n                <div className=\"text-xs text-zinc-400\">\n                  Showing {filteredPositions.length > 0 ? (currentPage - 1) * POSITIONS_PER_PAGE + 1 : 0} to {Math.min(currentPage * POSITIONS_PER_PAGE, filteredPositions.length)} of {filteredPositions.length} positions\n                </div>\n                <div className=\"flex space-x-2\">\n                  <button\n                    onClick={() => handlePageChange(1)}\n                    disabled={currentPage === 1}\n                    className=\"px-2 py-1 text-xs bg-zinc-700 text-zinc-300 rounded-md disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    &laquo;\n                  </button>\n                  <button\n                    onClick={() => handlePageChange(currentPage - 1)}\n                    disabled={currentPage === 1}\n                    className=\"px-2 py-1 text-xs bg-zinc-700 text-zinc-300 rounded-md disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    &lsaquo;\n                  </button>\n                  \n                  <div className=\"px-3 py-1 text-xs bg-zinc-600 text-zinc-100 rounded-md\">\n                    {currentPage} / {totalPages}\n                  </div>\n                  \n                  <button\n                    onClick={() => handlePageChange(currentPage + 1)}\n                    disabled={currentPage === totalPages}\n                    className=\"px-2 py-1 text-xs bg-zinc-700 text-zinc-300 rounded-md disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    &rsaquo;\n                  </button>\n                  <button\n                    onClick={() => handlePageChange(totalPages)}\n                    disabled={currentPage === totalPages}\n                    className=\"px-2 py-1 text-xs bg-zinc-700 text-zinc-300 rounded-md disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    &raquo;\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserPositions; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5089, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/app/components/PositionsPage.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletMultiButton } from '@solana/wallet-adapter-react-ui';\nimport UserPositions from './UserPositions';\nimport { fetchUserPositions, Position } from '../services/positions';\n\ninterface PositionsPageProps {\n  onBackClick: () => void;\n}\n\ninterface Analytics {\n  total_positions: number;\n  active_positions: number;\n  success_rate: number;\n  total_profit: number;\n  win_count: number;\n}\n\nconst PositionsPage = ({ onBackClick }: PositionsPageProps) => {\n  const wallet = useWallet();\n  const [positions, setPositions] = useState<Position[] | null>(null);\n  const [analytics, setAnalytics] = useState<Analytics>({\n    total_positions: 0,\n    active_positions: 0,\n    success_rate: 0,\n    total_profit: 0,\n    win_count: 0\n  });\n  const [loading, setLoading] = useState<boolean>(false);\n  const [refreshCounter, setRefreshCounter] = useState<number>(0);\n\n  useEffect(() => {\n    const fetchPositionsAndCalculateAnalytics = async () => {\n      if (!wallet.publicKey) {\n        setPositions(null);\n        setAnalytics({\n          total_positions: 0,\n          active_positions: 0,\n          success_rate: 0,\n          total_profit: 0,\n          win_count: 0\n        });\n        return;\n      }\n      \n      setLoading(true);\n      try {\n        const { positions: userPositions } = await fetchUserPositions(wallet);\n        \n        if (userPositions && userPositions.length > 0) {\n          setPositions(userPositions);\n          \n          // Calculate analytics from positions data\n          const totalPositions = userPositions.length;\n          const activePositions = userPositions.filter(p => p.status === 'ACTIVE').length;\n          const settledOrClaimedPositions = userPositions.filter(p => p.status === 'SETTLED' || p.status === 'CLAIMED');\n          \n          // Calculate win count (positions with payout_amount > amount)\n          const winCount = settledOrClaimedPositions.filter(p => {\n            if (p.status === 'CLAIMED' && p.payout_amount) {\n              return p.payout_amount > p.amount;\n            } else if (p.status === 'SETTLED' && p.payout_percentage) {\n              return p.payout_percentage > 100;\n            }\n            return false;\n          }).length;\n          \n          // Calculate success rate\n          const successRate = settledOrClaimedPositions.length > 0 \n            ? (winCount / settledOrClaimedPositions.length) * 100 \n            : 0;\n          \n          // Calculate total profit\n          let totalProfit = 0;\n          userPositions.forEach(position => {\n            if (position.status === 'CLAIMED' && position.payout_amount) {\n              // Profit = payout amount - original amount\n              const profit = position.payout_amount - position.amount;\n              totalProfit += profit;\n            } else if (position.status === 'SETTLED' && position.payout_percentage) {\n              // For settled positions, estimate profit based on payout percentage\n              const estimatedPayout = position.amount * (position.payout_percentage / 100);\n              const estimatedProfit = estimatedPayout - position.amount;\n              totalProfit += estimatedProfit;\n            }\n          });\n          \n          setAnalytics({\n            total_positions: totalPositions,\n            active_positions: activePositions,\n            success_rate: successRate,\n            total_profit: totalProfit,\n            win_count: winCount\n          });\n        } else {\n          setPositions([]);\n          setAnalytics({\n            total_positions: 0,\n            active_positions: 0,\n            success_rate: 0,\n            total_profit: 0,\n            win_count: 0\n          });\n        }\n      } catch (error) {\n        console.error('Failed to fetch positions:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPositionsAndCalculateAnalytics();\n    \n    // Set up a refresh interval\n    const intervalId = setInterval(() => {\n      setRefreshCounter(prev => prev + 1);\n    }, 30000); // Refresh every 30 seconds\n    \n    return () => clearInterval(intervalId);\n  }, [wallet.publicKey, refreshCounter]);\n\n  return (\n    <div className=\"min-h-screen bg-zinc-900 text-white\">\n      {/* Positions Page Content */}\n      <div className=\"min-h-screen\">\n        {/* Header */}\n        <header className=\"p-6 border-b border-zinc-800\">\n          <div className=\"max-w-7xl mx-auto flex justify-between items-center\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-10 h-10 bg-zinc-800 rounded-lg flex items-center justify-center border border-zinc-700\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                </svg>\n              </div>\n              <span className=\"text-xl font-bold\">Positions</span>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <WalletMultiButton className=\"px-8 py-3 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-xl transition-all duration-200\" />\n            </div>\n          </div>\n        </header>\n\n        {/* Main Content */}\n        <main className=\"p-6\">\n          <div className=\"max-w-7xl mx-auto\">\n            {/* Back button */}\n            <button \n              className=\"mb-6 flex items-center gap-2 text-zinc-400 hover:text-white transition-colors hover:cursor-pointer\"\n              onClick={onBackClick}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n              </svg>\n              Back to Dashboard\n            </button>\n\n            {/* Positions Stats Cards */}\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n              <div className=\"bg-zinc-800 p-6 rounded-xl border border-zinc-700\">\n                <div className=\"flex justify-between mb-4\">\n                  <div>\n                    <h3 className=\"text-zinc-400 text-sm\">Total Positions</h3>\n                    <p className=\"text-2xl font-semibold\">{loading ? '...' : analytics.total_positions}</p>\n                  </div>\n                  <div className=\"w-10 h-10 bg-blue-400/10 rounded-full flex items-center justify-center\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-blue-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                    </svg>\n                  </div>\n                </div>\n                <div className=\"text-xs text-zinc-400\">\n                  Positions created\n                </div>\n              </div>\n              \n              <div className=\"bg-zinc-800 p-6 rounded-xl border border-zinc-700\">\n                <div className=\"flex justify-between mb-4\">\n                  <div>\n                    <h3 className=\"text-zinc-400 text-sm\">Active Positions</h3>\n                    <p className=\"text-2xl font-semibold\">{loading ? '...' : analytics.active_positions}</p>\n                  </div>\n                  <div className=\"w-10 h-10 bg-green-400/10 rounded-full flex items-center justify-center\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-green-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                </div>\n                <div className=\"text-xs text-zinc-400\">\n                  Currently active\n                </div>\n              </div>\n              \n              <div className=\"bg-zinc-800 p-6 rounded-xl border border-zinc-700\">\n                <div className=\"flex justify-between mb-4\">\n                  <div>\n                    <h3 className=\"text-zinc-400 text-sm\">Success Rate</h3>\n                    <p className=\"text-2xl font-semibold\">{loading ? '...' : analytics.success_rate.toFixed(1)}%</p>\n                  </div>\n                  <div className=\"w-10 h-10 bg-purple-400/10 rounded-full flex items-center justify-center\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-purple-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                    </svg>\n                  </div>\n                </div>\n                <div className=\"text-xs text-zinc-400\">\n                  Win rate\n                </div>\n              </div>\n              \n              <div className=\"bg-zinc-800 p-6 rounded-xl border border-zinc-700\">\n                <div className=\"flex justify-between mb-4\">\n                  <div>\n                    <h3 className=\"text-zinc-400 text-sm\">Total Profit</h3>\n                    <p className={`text-2xl font-semibold ${analytics.total_profit >= 0 ? 'text-green-400' : 'text-red-400'}`}>\n                      {loading ? '...' : `${analytics.total_profit >= 0 ? '+' : ''}${analytics.total_profit.toFixed(2)} SOL`}\n                    </p>\n                  </div>\n                  <div className=\"w-10 h-10 bg-yellow-400/10 rounded-full flex items-center justify-center\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-yellow-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                </div>\n                <div className=\"text-xs text-zinc-400\">\n                  Cumulative profit\n                </div>\n              </div>\n            </div>\n                <div className=\"bg-zinc-900/30 p-4 rounded-lg\">\n                  <UserPositions />\n                </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default PositionsPage;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5680, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/app/components/Overview.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Cross2Icon } from '@radix-ui/react-icons';\n\ninterface Item {\n  id: number;\n  title: string;\n  subtitle: string;\n  width: string;\n  height: string;\n}\n\nconst items: Item[] = [\n  { \n    id: 1, \n    title: \"What is Bound Market?\", \n    subtitle: \"Bound Market is the easiest way to trade volatility on $BTC. Select a price range to Stay In or Breakout and earn up to 2x in just 1 day.\", \n    width: \"w-3/5\", \n    height: \"h-64\" \n  },\n  { \n    id: 2, \n    title: \"Why Bound Market?\", \n    subtitle: \"Retail users face significant barriers to professional trading techniques like hedging and leverage. Bound Market simplifies these complex strategies into intuitive positions.\", \n    width: \"w-2/4\", \n    height: \"h-64\" \n  },\n  { \n    id: 3, \n    title: \"Stay In Positions\", \n    subtitle: \"Short volatility positions betting the price stays within a range. Earn full profits if it stays in-range for 12+ hours, or partial returns if it stays in for any period.\", \n    width: \"w-1/3\", \n    height: \"h-80\" \n  },\n  { \n    id: 4, \n    title: \"Breakout Positions\", \n    subtitle: \"Long volatility positions betting the price moves outside a range. Earn full profits if breakout happens within 12 hours, or partial returns for breakouts between 12-24 hours.\", \n    width: \"w-1/2\", \n    height: \"h-72\" \n  }\n];\n\nconst Overview: React.FC = () => {\n  const [selectedId, setSelectedId] = useState<number | null>(null);\n\n  return (\n    <div className=\"container mx-auto px-4 mt-16\">\n      {/* First row: 1st and 2nd divs side by side */}\n      <div className=\"flex flex-col sm:flex-col md:flex-row lg:flex-row justify-center gap-6\">\n        {items.slice(0, 2).map((item, index) => (\n          <motion.div\n            key={item.id}\n            layoutId={item.id.toString()}\n            className={`p-4 sm:p-5 md:p-6 bg-zinc-800 hover:custom-red rounded-3xl text-gray-50 cursor-pointer \n                      w-full sm:w-full md:w-1/2 lg:${item.width} \n                      h-auto sm:h-auto md:${item.id === 1 ? 'h-64' : 'h-64'} lg:${item.height} \n                      border border-zinc-700 mb-6 sm:mb-6 md:mb-0 lg:mb-0`}\n            onClick={() => setSelectedId(item.id)}\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <motion.h1 className=\"text-lg sm:text-xl md:text-2xl lg:text-2xl mb-2 sm:mb-3 md:mb-4 lg:mb-5 text-balance\">{item.title}</motion.h1>\n            <motion.p className=\"text-sm sm:text-base md:text-lg lg:text-xl text-zinc-300 text-justify px-1 sm:px-2 md:px-2 lg:px-3\">{item.subtitle}</motion.p>\n          </motion.div>\n        ))}\n      </div>\n\n      {/* Second row: 3rd and 4th divs side by side */}\n      <div className=\"flex flex-col sm:flex-col md:flex-row lg:flex-row justify-center gap-6 mt-0 sm:mt-0 md:mt-6 lg:mt-6\">\n        {items.slice(2).map((item) => (\n          <motion.div\n            key={item.id}\n            layoutId={item.id.toString()}\n            className={`p-4 sm:p-5 md:p-6 bg-zinc-800 hover:shadow-zinc-700 rounded-3xl text-gray-50 cursor-pointer \n                      w-full sm:w-full md:w-1/2 lg:${item.width} \n                      h-auto sm:h-auto md:${item.id === 3 ? 'h-80' : 'h-72'} lg:${item.height} \n                      border border-zinc-700 mb-6 sm:mb-6 md:mb-0 lg:mb-0`}\n            onClick={() => setSelectedId(item.id)}\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.95 }}\n            style={{ \n              display: \"flex\", \n              flexDirection: \"column\", \n              justifyItems: item.id === 3 ? \"self-end\" : \"\" \n            }}\n          >\n            <motion.h1 className=\"text-lg sm:text-xl md:text-2xl lg:text-2xl mb-2 sm:mb-3 md:mb-5 lg:mb-6 text-balance\">{item.title}</motion.h1>\n            <motion.h5 className=\"text-sm sm:text-base md:text-lg lg:text-xl text-zinc-300 text-balance\">{item.subtitle}</motion.h5>\n          </motion.div>\n        ))}\n      </div>\n\n      {/* AnimatePresence for selected item */}\n      <AnimatePresence>\n        {selectedId && (\n          <motion.div\n            layoutId={selectedId.toString()}\n            className=\"fixed top-0 left-0 w-full h-full bg-black/50 backdrop-blur-lg backdrop-filter flex items-center justify-center z-50 p-3 sm:p-4 md:p-6 lg:p-4\"\n          >\n            <div className=\"bg-zinc-900 p-4 sm:p-5 md:p-8 lg:p-10 rounded-lg text-center w-full sm:w-11/12 md:w-3/4 lg:w-2/4 h-auto max-h-[90vh] sm:max-h-[90vh] md:max-h-[85vh] lg:h-3/5 relative border border-zinc-700 overflow-y-auto\">\n              <motion.h1 className=\"text-gray-50 text-xl sm:text-2xl md:text-2xl lg:text-3xl font-thin mb-2 sm:mb-3 md:mb-4 lg:mb-6\">\n                {items.find((item) => item.id === selectedId)?.title}\n              </motion.h1>\n              <motion.h5 className=\"text-zinc-300 text-xs sm:text-sm md:text-sm lg:text-base text-balance font-medium\">\n                {items.find((item) => item.id === selectedId)?.subtitle}\n              </motion.h5>\n\n              {/* Add additional detailed content for modal views */}\n              {selectedId === 1 && (\n                <div className=\"mt-4 sm:mt-6 md:mt-8 lg:mt-16 text-left\">\n                  <ul className=\"text-zinc-300 list-disc pl-4 sm:pl-5 space-y-1 sm:space-y-2\">\n                  <li className=\"text-xs sm:text-sm md:text-sm lg:text-base text-zinc-300 mb-2 sm:mb-3 md:mb-3 lg:mb-4\">\n                    Bound Market simplifies volatility trading, making it accessible to all traders. Instead of complex options trading, we offer straightforward \"Stay In\" or \"Breakout\" positions.\n                  </li>\n                  <li className=\"text-xs sm:text-sm md:text-sm lg:text-base text-zinc-300 mb-2 sm:mb-3 md:mb-3 lg:mb-4\">\n                    Our platform allows you to profit from your market insights without needing deep technical knowledge of derivatives or options.\n                  </li>\n                  <li className=\"text-xs sm:text-sm md:text-sm lg:text-base text-zinc-300\">\n                    With predictable outcomes and transparent mechanics, you can focus on what matters: your market prediction.\n                  </li>\n                  </ul>\n                </div>\n              )}\n\n              {selectedId === 3 && (\n                <div className=\"mt-4 sm:mt-6 md:mt-8 lg:mt-16 text-left\">\n                  <p className=\"text-xs sm:text-sm md:text-sm lg:text-base text-zinc-300 mb-2 sm:mb-3 md:mb-3 lg:mb-4\">\n                    <span className=\"text-gray-50 font-medium\">How \"Stay In\" works:</span> When you open a Stay In position, you're predicting BTC will remain within a specified price range.\n                  </p>\n                  <p className=\"text-xs sm:text-sm md:text-sm lg:text-base text-zinc-300 mb-2 sm:mb-3 md:mb-3 lg:mb-4\">\n                    <span className=\"text-gray-50 font-medium\">Profit mechanics:</span> If BTC stays within range for the full 24 hours, you earn up to 2x your investment. Even if it breaks out eventually, you'll still receive a percentage based on how long it stayed in range.\n                  </p>\n                  <p className=\"text-xs sm:text-sm md:text-sm lg:text-base text-zinc-300\">\n                    <span className=\"text-gray-50 font-medium\">Perfect for:</span> Sideways markets, consolidation periods, or when you expect low volatility.\n                  </p>\n                </div>\n              )}\n\n              {selectedId === 4 && (\n                <div className=\"mt-4 sm:mt-6 md:mt-8 lg:mt-16 text-left\">\n                  <p className=\"text-xs sm:text-sm md:text-sm lg:text-base text-zinc-300 mb-2 sm:mb-3 md:mb-3 lg:mb-4\">\n                    <span className=\"text-gray-50 font-medium\">How \"Breakout\" works:</span> When you open a Breakout position, you're predicting BTC will move outside a specified price range.\n                  </p>\n                  <p className=\"text-xs sm:text-sm md:text-sm lg:text-base text-zinc-300 mb-2 sm:mb-3 md:mb-3 lg:mb-4\">\n                    <span className=\"text-gray-50 font-medium\">Profit mechanics:</span> If BTC breaks outside the range within 12 hours, you earn up to 2x your investment. If the breakout happens between 12-24 hours, you'll receive a percentage of your potential profit.\n                  </p>\n                  <p className=\"text-xs sm:text-sm md:text-sm lg:text-base text-zinc-300\">\n                    <span className=\"text-gray-50 font-medium\">Perfect for:</span> News events, market uncertainty, or when you expect high volatility.\n                  </p>\n                </div>\n              )}\n\n              {selectedId === 2 && (\n                <div className=\"mt-4 sm:mt-5 md:mt-6 lg:mt-8 text-left\">\n                  <p className=\"text-xs sm:text-sm md:text-sm lg:text-base text-zinc-300 mb-2 sm:mb-3 md:mb-3 lg:mb-4\">\n                    Traditional financial markets present several challenges for retail traders:\n                  </p>\n                  <ul className=\"text-xs sm:text-sm md:text-sm lg:text-base text-zinc-300 list-disc pl-4 sm:pl-5 space-y-1 sm:space-y-2\">\n                    <li>Complex derivatives with steep learning curves</li>\n                    <li>High capital requirements for options trading</li>\n                    <li>Expensive fee structures that eat into profits</li>\n                    <li>Complicated hedging strategies that require multiple positions</li>\n                    <li>Limited access to professional volatility trading tools</li>\n                  </ul>\n                \n                </div>\n              )}\n\n              {/* Close button */}\n              <motion.button\n                className=\"absolute top-2 right-2 sm:top-3 sm:right-3 md:top-3 md:right-3 lg:top-4 lg:right-4 bg-zinc-800 text-white rounded-full h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8 lg:h-10 lg:w-10 flex justify-center items-center border border-zinc-700\"\n                onClick={() => setSelectedId(null)}\n                whileHover={{ scale: 1.1 }}\n                whileTap={{ scale: 0.9 }}\n              >\n                <Cross2Icon className=\"h-3 w-3 sm:h-4 sm:w-4 md:h-4 md:w-4 lg:h-5 lg:w-5\" />\n              </motion.button>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default Overview;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6120, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/app/components/CallToAction.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { TokenSOL } from '@web3icons/react'; \n\ninterface CallToActionProps {\n  onGoToDashboard: () => void;\n}\n\nconst CallToAction: React.FC<CallToActionProps> = ({ onGoToDashboard }) => {\n  return (\n    <div className=\"relative flex justify-center items-center max-h-[300px] sm:max-h-[320px] md:max-h-[350px] lg:max-h-[370px] w-full bg-zinc-800 shadow-md overflow-hidden border border-zinc-700 rounded-2xl sm:rounded-2xl md:rounded-3xl lg:rounded-3xl p-3 sm:p-3 md:p-4 lg:p-0 mt-0\">\n      {/* Solana Icon as Background - Desktop & Tablet */}\n      <div className=\"absolute -right-28 -top-30 z-0 hidden md:block lg:block\">\n        <div className=\"opacity-10 -rotate-12\">\n          <TokenSOL variant=\"branded\" size={650} />\n        </div>\n      </div>\n      \n      {/* Smaller Solana Icon for Small Tablet */}\n      <div className=\"absolute -right-16 -top-16 z-0 hidden sm:block md:hidden\">\n        <div className=\"opacity-10 -rotate-12\">\n          <TokenSOL variant=\"branded\" size={350} />\n        </div>\n      </div>\n      \n      {/* Smallest Solana Icon for Mobile */}\n      <div className=\"absolute -right-12 -top-12 z-0 block sm:hidden\">\n        <div className=\"opacity-10 -rotate-12\">\n          <TokenSOL variant=\"branded\" size={250} />\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"relative z-10 p-3 sm:p-4 md:p-8 lg:p-12 flex flex-col justify-between gap-3 sm:gap-4 md:gap-6 lg:gap-10\">\n        <h2 className=\"text-lg sm:text-xl md:text-xl lg:text-2xl font-normal text-gray-50\">\n          &quot;Ready to Trade Volatility? Bound Market Makes It Simple!&quot;\n        </h2>\n        <p className=\"text-xs sm:text-sm md:text-sm lg:text-base pl-0 sm:pl-0 md:pl-1 lg:pl-2 text-zinc-300 font-thin\">\n          Bound Market makes volatility trading effortless with simple Stay In or Breakout positions.\n          No complex derivatives, no steep learning curves. Join thousands of traders already profiting from BTC price movements!\n        </p>\n        <button\n          onClick={onGoToDashboard}\n          className=\"max-w-[120px] sm:max-w-[150px] md:max-w-[180px] lg:max-w-[200px] \n                   h-[30px] sm:h-[35px] md:h-[40px] lg:h-[50px] \n                   px-3 sm:px-3 md:px-4 lg:px-5 \n                   py-0 sm:py-1 md:py-1 lg:py-2 \n                   bg-zinc-800 border border-zinc-600 rounded-[8px] sm:rounded-[10px] md:rounded-[10px] lg:rounded-[12px] \n                   group hover:bg-black hover:border-zinc-400 transition-all duration-300 font-normal \n                   self-start md:self-start lg:self-auto\"\n        >\n          <span className=\"text-xs sm:text-sm md:text-sm lg:text-base text-gray-50 group-hover:text-white\">Start Trading &gt;</span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CallToAction;"],"names":[],"mappings":";;;;AAGA;AAHA;;;AASA,MAAM,eAA4C,CAAC,EAAE,eAAe,EAAE;IACpE,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,iNAAA,CAAA,WAAQ;wBAAC,SAAQ;wBAAU,MAAM;;;;;;;;;;;;;;;;0BAKtC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,iNAAA,CAAA,WAAQ;wBAAC,SAAQ;wBAAU,MAAM;;;;;;;;;;;;;;;;0BAKtC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,iNAAA,CAAA,WAAQ;wBAAC,SAAQ;wBAAU,MAAM;;;;;;;;;;;;;;;;0BAKtC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAqE;;;;;;kCAGnF,8OAAC;wBAAE,WAAU;kCAAkG;;;;;;kCAI/G,8OAAC;wBACC,SAAS;wBACT,WAAU;kCAQV,cAAA,8OAAC;4BAAK,WAAU;sCAAiF;;;;;;;;;;;;;;;;;;;;;;;AAK3G;uCAEe","debugId":null}},
    {"offset": {"line": 6253, "column": 0}, "map": {"version":3,"sources":["file:///home/tushar/bound-market-core/frontend/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport Image from \"next/image\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nconst LoadingOverlay = ({ isVisible }: { isVisible: boolean }) => (\n  <AnimatePresence>\n    {isVisible && (\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        className=\"fixed inset-0 bg-black/30 backdrop-blur-sm z-50 flex items-center justify-center\"\n      >\n        <motion.div\n          initial={{ scale: 0.9, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          exit={{ scale: 0.9, opacity: 0 }}\n          className=\"bg-zinc-900 rounded-2xl p-6 shadow-xl border border-zinc-800/50 flex items-center gap-4\"\n        >\n          <div className=\"relative w-6 h-6\">\n            <motion.div\n              className=\"absolute inset-0 rounded-full border-2 border-blue-500/20\"\n              style={{ borderTopColor: \"rgb(59, 130, 246)\" }}\n              animate={{ rotate: 360 }}\n              transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n            />\n          </div>\n          <span className=\"text-zinc-200 font-medium\">Loading...</span>\n        </motion.div>\n      </motion.div>\n    )}\n  </AnimatePresence>\n);\n\nconst fadeIn = {\n  initial: { opacity: 0, y: 20 },\n  animate: { opacity: 1, y: 0 },\n  exit: { opacity: 0, y: -20 },\n  transition: { duration: 0.3 }\n};\n\nconst slideIn = {\n  initial: { x: -20, opacity: 0 },\n  animate: { x: 0, opacity: 1 },\n  transition: { duration: 0.3 }\n};\nimport DashboardPreview from \"./components/DashboardPreview\";\nimport Dashboard from \"./components/Dashboard\";\nimport PositionsPage from \"./components/PositionsPage\";\nimport Overview from \"./components/Overview\";\nimport CallToAction from \"./components/CallToAction\";\nimport logo from \"../public/icon0.svg\";\n\ntype NavButtonProps = {\n  onClick: () => void;\n  children: React.ReactNode;\n  variant?: \"primary\" | \"secondary\";\n};\n\nconst NavButton = ({ onClick, children, variant = \"primary\" }: NavButtonProps) => (\n  <motion.button\n    onClick={onClick}\n    whileHover={{ scale: 1.02 }}\n    whileTap={{ scale: 0.98 }}\n    className={`\n      px-6 py-2.5 rounded-lg font-medium\n      flex items-center gap-2 shadow-lg\n      transition-all duration-200 ease-in-out\n      ${variant === \"primary\" \n        ? \"bg-gradient-to-r from-blue-600 to-blue-500 hover:from-blue-700 hover:to-blue-600 text-white hover:shadow-blue-500/20 border border-blue-400/20\" \n        : \"bg-zinc-800/50 hover:bg-zinc-700/50 text-gray-200 hover:shadow-zinc-500/10 backdrop-blur-sm border border-zinc-700/50\"\n      }\n    `}\n  >\n    {children}\n  </motion.button>\n);\n\ntype PageContainerProps = {\n  children: React.ReactNode;\n};\n\nconst PageContainer = ({ children }: PageContainerProps) => (\n  <div className=\"min-h-screen bg-gradient-to-br from-zinc-950 via-zinc-900 to-zinc-950 relative overflow-hidden\">\n    {/* Ambient background gradients */}\n    <div className=\"absolute inset-0 bg-[radial-gradient(ellipse_at_top,rgba(56,189,248,0.05),transparent_50%)] pointer-events-none\" />\n    <div className=\"absolute inset-0 bg-[radial-gradient(ellipse_at_bottom_right,rgba(29,78,216,0.05),transparent_50%)] pointer-events-none\" />\n    \n    {/* Subtle grid pattern */}\n    <div \n      className=\"absolute inset-0 bg-[linear-gradient(to_right,#18181b_1px,transparent_1px),linear-gradient(to_bottom,#18181b_1px,transparent_1px)] bg-[size:4rem_4rem] [mask-image:radial-gradient(ellipse_80%_80%_at_50%_50%,black,transparent)] pointer-events-none opacity-25\"\n    />\n    \n    {/* Content */}\n    <div className=\"relative\">\n      {children}\n    </div>\n  </div>\n);\n\ntype HeaderProps = {\n  currentView: \"home\" | \"dashboard\" | \"positions\";\n  onNavigate: (view: \"home\" | \"dashboard\" | \"positions\") => void;\n};\n\nconst NavigationBreadcrumb = ({ currentView }: { currentView: \"home\" | \"dashboard\" | \"positions\" }) => {\n  const paths = {\n    home: [],\n    dashboard: [\"Dashboard\"],\n    positions: [\"Dashboard\", \"Positions\"]\n  };\n\n  return (\n    <div className=\"hidden sm:flex items-center gap-2 text-sm text-zinc-400\">\n      {paths[currentView].map((path, index) => (\n        <div key={path} className=\"flex items-center gap-2\">\n          {index > 0 && <span>/</span>}\n          <span>{path}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst Header = ({ currentView, onNavigate }: HeaderProps) => (\n  <motion.header \n    className=\"sticky top-0 z-50 backdrop-blur-lg bg-zinc-900/80 border-b border-zinc-800/50\"\n    initial={false}\n    animate={{\n      height: currentView === \"home\" ? \"5rem\" : \"4rem\",\n    }}\n    transition={{ duration: 0.3 }}\n  >\n    <div className=\"max-w-7xl mx-auto px-6 h-full\">\n      <div className=\"flex justify-between items-center h-full\">\n        <div className=\"flex items-center gap-4\">\n          <motion.div \n            className=\"flex items-center gap-3 cursor-pointer\"\n            onClick={() => onNavigate(\"home\")}\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n          >\n            <div className=\"w-10 h-10 bg-white rounded-xl flex items-center justify-center border border-zinc-700 shadow-lg group-hover:border-blue-500 transition-colors\">\n              <Image src={logo} alt=\"Bound Market\" className=\"w-7 h-7\" />\n            </div>\n            <span className=\"text-lg font-semibold text-gray-50\">Bound Market</span>\n          </motion.div>\n          <NavigationBreadcrumb currentView={currentView} />\n        </div>\n        <nav className=\"flex items-center gap-4\">\n          {currentView !== \"home\" && (\n            <NavButton onClick={() => onNavigate(\"home\")} variant=\"secondary\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-4 w-4 mr-1\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n                />\n              </svg>\n              Home\n            </NavButton>\n          )}\n          {currentView === \"home\" && (\n            <NavButton onClick={() => onNavigate(\"dashboard\")}>\n              Launch App\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-4 w-4 ml-1\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M14 5l7 7m0 0l-7 7m7-7H3\"\n                />\n              </svg>\n            </NavButton>\n          )}\n        </nav>\n      </div>\n    </div>\n  </motion.header>\n);\n\nexport default function Page() {\n  const [currentView, setCurrentView] = useState<\"home\" | \"dashboard\" | \"positions\">(\"home\");\n  const [isNavigating, setIsNavigating] = useState(false);\n\n  const handleNavigation = async (view: \"home\" | \"dashboard\" | \"positions\") => {\n    setIsNavigating(true);\n    // Add a small delay for smooth transition\n    await new Promise(resolve => setTimeout(resolve, 300));\n    setCurrentView(view);\n    setIsNavigating(false);\n  };\n\n  return (\n    <PageContainer>\n      <LoadingOverlay isVisible={isNavigating} />\n      <Header currentView={currentView} onNavigate={handleNavigation} />\n      \n      <AnimatePresence mode=\"wait\">\n        {currentView === \"home\" && (\n          <motion.main\n            {...fadeIn}\n            className=\"relative\"\n          >\n            <div className=\"max-w-7xl mx-auto px-6 py-12\">\n              {/* Hero Section */}\n              <div className=\"text-center mb-16\">\n                <motion.h1 \n                  className=\"text-4xl sm:text-5xl md:text-6xl font-bold mb-6 text-gray-50 tracking-tight\"\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.2, duration: 0.5 }}\n                >\n                  Decentralized Binary Markets for\n                  <motion.span \n                    className=\"text-blue-500\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    transition={{ delay: 0.5, duration: 0.5 }}\n                  > Digital Asset Volatility</motion.span>\n                </motion.h1>\n                <motion.p \n                  className=\"text-lg sm:text-xl text-zinc-400 max-w-3xl mx-auto mb-12\"\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  transition={{ delay: 0.7, duration: 0.5 }}\n                >\n                  Predict market movements and profit from your insights. Powered by Solana\n                  for lightning-fast, low-cost predictions.\n                </motion.p>\n                \n                {/* Preview Section */}\n                <motion.div \n                  className=\"relative mb-24\"\n                  initial={{ opacity: 0, scale: 0.95 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ delay: 0.9, duration: 0.5 }}\n                >\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-zinc-950 via-transparent to-transparent z-10\" />\n                  <DashboardPreview onPreviewClick={() => handleNavigation(\"dashboard\")} />\n                </motion.div>\n              </div>\n\n              {/* Features Overview */}\n              <motion.section \n                className=\"mb-24\"\n                initial={{ opacity: 0, y: 40 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.7 }}\n              >\n                <Overview />\n              </motion.section>\n\n              {/* Call to Action */}\n              <motion.section \n                className=\"relative\"\n                initial={{ opacity: 0, y: 40 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.7 }}\n              >\n                <CallToAction onGoToDashboard={() => handleNavigation(\"dashboard\")} />\n              </motion.section>\n            </div>\n          </motion.main>\n        )}\n\n        {currentView === \"dashboard\" && (\n          <motion.div {...fadeIn}>\n            <Dashboard\n              onBackClick={() => handleNavigation(\"home\")}\n              onPositionsClick={() => handleNavigation(\"positions\")}\n            />\n          </motion.div>\n        )}\n\n        {currentView === \"positions\" && (\n          <motion.div {...fadeIn}>\n            <PositionsPage onBackClick={() => handleNavigation(\"dashboard\")} />\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </PageContainer>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}